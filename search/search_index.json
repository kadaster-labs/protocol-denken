{"config":{"lang":["nl"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Start","text":"<p>Denken in protocollen of protocol-denken is een eigen term. Het is een toekomstvisie en perspectief gebaseerd op de geschiedenis en evolutie van technologie, internet en het digitale tijdperk. Als we naar deze evolutie van papier naar digitaal kijken en de ontwikkeling van vandaag trachten te projecteren, dan kunnen we een aantal zaken herkennen die de ontwikkeling van de toekomst gaan vormen. </p> <p>We herkennen ontwikkelingen die lijken op het ontstaan van het internet en het web. Destijds zijn internet protocollen ontwikkeld die 'erg dun' ontworpen zijn, terwijl de protocollen van vandaag juist 'dikke protocollen' zijn. We maken stappen om automatisering verder door te voeren in onze processen. Data staat steeds meer centraal en de herkomst en ontstaan van data wordt steeds belangrijker en daarmee ook de taal en semantiek.</p> <p>De uitwisseling van data is onderdeel van de digitale samenleving. Dat gaat verder dan het verbinden van computers tot het ontstaan van het internet en bouwt daarop voort. Maar wel met uitgebreidere voorwaarden en striktere uitvoering van de regels waaronder data ontstaat en uitgewisseld wordt. Een dik protocol dus. En aangezien data uitwisseling altijd tussen meerdere partijen plaatsvindt (anders is het geen data uitwisseling ) is het samen ontwikkelen van deze protocollen randvoorwaarde. Sterker nog, om vertrouwen te hebben in de data uitwisseling en de data zelf (incl. het ontstaan, herkomst, etc) is het noodzakelijk dat ook deze protocollen open zijn, zoals ook de internet procotollen open zijn. Open Source en Open Standaarden zijn hierin de manier van werken voor het ontstaan en ontwikkelen van deze protocollen.</p> <p>Er tekenen zich een aantal oplossingen af. Dat geeft suggesties voor een droombeeld waarin gebeurtenisgedreven registers in open samenwerking in een netwerk van datastromen worden ontworpen en bestaan. Dit is denken in protocollen in het kort.</p> <p>protocol-denken is ontstaan in het team Emerging Technology Center van het Kadaster.  Daarom dank en eer aan Badreddine Tazrouti, Koen Huisstede, Nick van Apeldoorn en Marc van Andel voor de ontwikkeling van deze idee\u00ebn en het 'bestuiven' van dit concept! </p>"},{"location":"automatisering/","title":"Automatisering","text":"<p>In de transitie van papier naar digitaal wordt uitgebreid gesproken over automatisering en dat dat een opmaat is naar digitalisering. Maar er is meer te begrijpen aan automatisering.</p>"},{"location":"automatisering/#mindset","title":"Mindset","text":"<p>Automatisering is ook een mindset, een gebruik. Op het moment dat ik twee keer dezelfde handeling doe, ga ik automatiseren. Het is een standaard onderdeel van het basisonderwijs in Nederland, waarin kinderen leren om hun brein te trainen in het 'standaard uitvoeren van taken'. Dat is automatiseren. Dat passen we dus breed toe.</p> <p>Software is eating the world - Marc Andreessen</p> <p>Vandaag de dag is technologie een gewoon onderdeel van ons dagelijks leven en de samenleving. Technologie is en/of bevat software. Veel van onze processen kunnen we automatiseren. Vooral de herhalende en repeterende werkzaamheden. Anno 2024 met de massale toegankelijkheid van AI systemen die overal oppoppen, wordt dat alleen maar duidelijker.</p> <p>Naar de toekomst toe moeten we daarom meenemen dat veel van wat we nu nog handmatig doen, waar we nu nog toegevoegde waarde van mensen zien, geautomatiseerd zou kunnen gaan worden. Het is een mindset om gericht te zijn op automatisering ... tot het punt dat we onszelf gaan weg automatiseren. Gaan we daar ooit komen? Geen idee. Hebben we taken die in het verleden als 'dat zullen mensen altijd blijven doen' ondertussen al standaard geautomatiseerd? JA! Kleren wassen we met een wasmachine. Afwas doen we met de vaatwasser. Teksten op borden in het buitenland vertalen we met Google Lens. Communiceren met mensen in een voor ons onbekende taal, doen we mbv onze devices.</p> <p>Onderdeel van het denken in protocollen is dat we gericht zijn op de mogelijkheden van automatisering. Software, code, scripting zouden niet als 'eng' moeten worden beschouwd, maar als normaal onderdeel van ieders werk (en priv\u00e9leven). Er zijn al tools beschikbaar, die dit ook toegankelijk maken voor iedereen. AI gaat daar nog eens een versnelling in teweeg brengen.</p> <p>Uitgangspunt is dus automatisering als essentieel onderdeel van de toekomst. Dan is machine-leesbare informatie, data, gegevens ... en regels van groot belang! Dat ondersteunt nog meer de transitie van papier naar digitaal.</p>"},{"location":"automatisering/#data-software-en-algoritme","title":"Data, software en algoritme","text":"<p>Vandaag de dag lijkt data het belangrijkste te zijn in het digitale domein. Gezien vanuit de geschiedenis van papier naar digitaal is dat ook wel herkenbaar. En toch ... Data alleen is nog steeds 'gewoon data'. Er is software nodig om die data te kunnen doorzoeken, bekijken, bewerken. De software is daarmee even belangrijk als de data zelf. Dat past ook bij bovengenoemde quote van Marc Andreessen.</p> <p>Algoritmes en Artificial Intelligence (AI) staat ook groot in de belangstelling. Het is van belang om te beseffen hoe deze samenhangt met software en data. Het volgende plaatje geeft deze samenhang weer:</p> <p></p> <p>In broncode (sources) staan de computer instructies van de software. Als deze door de computer uitgevoerd worden, hebben we het over software. Een product. Een systeem. Deze software maakt gebruik van data en produceert data. Artificial Intelligence algoritmes zijn (onder andere) getrainde modellen, eigenlijk statistieken, op basis van data. Zo'n AI model kan dan vervolgens weer in software gebruikt worden bij de interpretatie data en de productie van nieuwe data.</p>"},{"location":"automatisering/#internet","title":"Internet","text":"<p>Een ander aspect dat van belang is bij automatisering en computertechniek, is de eigenlijke werking van de computer en het internet. We hebben het - als voorbeeld - over het algemeen namelijk (nog steeds) over het versturen van een email. Dat is echter gebruik van woorden en beeldspraak vanuit het papieren tijdperk. In computertechniek bestaat dat helemaal niet!</p> <p>Als wij een email versturen, dan wordt er een kopie van de data die de email voorstelt, ergens anders opgeslagen ... om vervolgens verder gekopieerd te worden. We zeggen versturen maar feitelijk doen we kopi\u00ebren. Een email in mijn mailbox is altijd een kopie van het 'origineel' dat op de computer van de verzender staat.</p> <p></p> <p>Sterker nog, zelfs binnen \u00e9\u00e9n computer wordt met kopie\u00ebn gewerkt! Als een computer uit is, staat de data alleen op de hard disk, de harde schijf. Zodra we de computer aan zetten, worden gegevens (data) van de harde schijf gelezen en 'geladen' in het geheugen (memory of RAM). Met laden bedoelen we feitelijk kopi\u00ebren. De data staat nog steeds op de harde schijf op exact dezelfde manier als toen de computer uit was. Als we 'iets' met die data doen, dan wordt deze naar het interne geheugen gekopieerd. Als deze vervolgens op het scherm zichtbaar gemaakt dient te worden, wordt de data getransformeerd naar de input voor de Graphical Processing Unit, de GPU. Deze bevat ook geheugen (memory) waarin dan opnieuw een kopie van de getransformeerde, oorspronkelijke data staat. Vervolgens worden verdere transformaties uitgevoerd naar schermresoluties en pixels ... en wordt een volgende kopie in het geheugen van de GPU bewaard. Deze wordt naar het scherm gekopieerd welke een voor ons zichtbaar beeld presenteert. Feitelijk zijn het pixels van een bepaalde kleur die een representatie geven van een document met letters die voor ons betekenis heeft. Dit heeft nog weinig te maken met de oorspronkelijke data van eenen en nullen op de harde schijf van de computer. Origineel en kopie zijn in computertechniek nietszeggende woorden geworden.</p> <p></p>"},{"location":"context/","title":"Context","text":"<p>In de uitvoering van wetgeving door de overheid (als voorbeeld) liggen er specifieke wetten ten grondslag. Deze wetten hebben een bepaalde scope, doelgerichtheid en reikwijdte. Veel uitvoering vindt plaats binnen slechts \u00e9\u00e9n wet of wetscontext. Fysieke objecten in de ruimte of ik als persoon ben echter onderwerp welke door meerdere wetten geraakt wordt. Al die wetten hebben wel een samenhang maar zijn niet in samenhang geschreven. Sterker nog, er zijn voldoende voorbeelden dat er ruimte is tussen wetten of dat in de uitvoering bijv. ik als burger door de combinatie van meerdere wetten in een slecht positie terecht kom ... zonder uitgang. De wetten zijn immers niet in samenhang ontworpen, in ieder geval niet tot in alle finesses.</p> <p>Er zal nooit een volledig in samenhang ontworpen wetgeving en uitvoering zijn of komen. Net zoals er nooit \u00e9\u00e9n enkel samenhangend model van de werkelijkheid zal zijn. Dat is simpelweg niet mogelijk. Dan hebben we (dus) andere methodieken en benadering nodig. En dat kan!</p> <p>We moeten daarom constateren dat bij het ontstaan van data er vaak (altijd?) slechts \u00e9\u00e9n wet aan ten grondslag ligt. Je zou kunnen zeggen: \u00e9\u00e9n context. Sterker nog, wij deponeren hier de stelling dat het ontstaan van data altijd \u00e9\u00e9n context heeft, welke heel duidelijk en expliciet is. Data ontstaat altijd op \u00e9\u00e9n plaats, \u00e9\u00e9n tijd door \u00e9\u00e9n (verantwoordelijke) actor. Dit is de context waarin de data ontstaat.</p> <p>Tot zover het ontstaan van data uit \u00e9\u00e9n context. Over naar het gebruik van data. Daar waar de data gebruikt wordt, is steeds vaker veelzijdig en vanuit heel verschillende perspectieven. Dit duiden we aan met gebruikscontexten. Vanuit de ontstaanscontext zijn er vaak vele gebruikscontexten en elke 'overgang' dient expliciet ontworpen te worden. Hierin wordt verantwoord hoe begrippen en semantiek op elkaar aansluiten (of niet) tussen de contexten en welke transformatie(s) er nodig zijn en toegepast worden.</p> <p></p> <p>Data uitwisseling vindt altijd plaats tussen partijen. Er zijn dus altijde meerdere partijen betrokken. Hoe die uitwisseling plaatsvindt, is daarom een afspraak tussen de partijen. Voor een ontstaanscontext is het prettiger als er een beperkt aantal context overgangen gedefinieerd zijn en geleverd worden. Dit is in het belang van de ontstaanscontext eigenaar welke ook wel bronhouder genoemd wordt. Daar ontstaat tenslotte de data. Het is daarom aan de ontstaanscontext eigenaar / bronhouder om te organiseren dat alle gebruikscontexten goed worden voorzien en geoptimaliseerd worden door uniformiteit.</p> <p>Vandaag de dag zijn we gewend aan \u00e9\u00e9n model voor alle contextovergangen. E\u00e9n view for all, zullen we maar zeggen. Maar als we elke contextovergang recht willen doen, zullen we specifieke overgangen moeten realiseren in model, semantiek, samenstelling en transformatie. Dat betekent dat de eigenaar van de data in de primaire context betrokken moet worden bij elke overgang naar een andere context.</p> <p></p> <p>In het ontwerpen van contexten en contextovergangen is taal en semantiek van groot belang ...</p> <p>In Domain Driven Design is Bounded Contexts een expliciet begrip. Dit is goede basis om dit hoofdstuk goed te doorgronden.</p>"},{"location":"ontstaan-van-data/","title":"Ontstaan van data","text":"<p>Een belangrijk onderdeel van het denken in protocollen en ook een relevant onderwerp van vandaag, is de herkomst en het ontstaan van data. In de geschiedenis van registers, grootboeken op papier, de standaardisatie daarvan, de mechanisatie daarvan en vervolgens de automatisering daarvan, staan we op het punt om onze processen opnieuw te gaan ontwerpen voor een echte digitalisering (zie papier naar digitaal). Hier moeten we bekennen dat we van mechanisatie naar automatisering vooral de papieren boeken hebben gerespecteerd en digitaal beschikbaar gemaakt. Onze boeken, registers, grootboeken hebben we in een database en bijbehorende applicatie gestopt. Da's een mooi begin ... maar we hebben een volgende stap nodig om het ontstaan van data serieus te beschrijven en digitaal beschikbaar te maken. Dit is een paradigma verschuiving, een 'paradigm shift'.</p> <p></p> <p>Voor het ontstaan is het architectuurpatroon Event Sourcing van groot belang. Het is niet de 'heilige graal' en de oplossing voor alles, maar het geeft antwoord op het ontstaan van data, op de evolutie van data. Het adresseert ook dat data-gebeurtenissen, oftewel events, gebeurd zijn en dat we daar 'mee moeten dealen'. Als er een fout in een register zit, kunnen we dat register vrij eenvoudig aanpassen, ook in het verleden. Met events dienen we dat expliciet te beschrijven en daarmee moeten we ontwerpen hoe en dat we correcties gaan toepassen.</p> <p>Een ander aspect van Event Sourcing is dat de evolutie van een register, een grootboek, beschreven in de stroom van events (data-gebeurtenissen), leidt tot een projectie. Ons bekende register, grootboek, boek met resultaten is d\u00e9 projectie van de events, welke wordt opgebouwd door alle events 'af te spelen' volgens regels. Het is onze \u00e9nige projectie, maar ... Met Event Souring wordt het mogelijk om meerdere projecties te maken op basis van dezelfde stroom van events. Er is hierin zeer zeker een primaire projectie wat de reden van het register of grootboek is. Tegelijk zijn er eerdere meerdere en vele projecties die secundair zijn aan de primaire reden van bestaan en zeer relevant zijn. Zeker in het geval dat de data, het register, het grootboek, ergens anders gebruikt wordt. Het is zeer waarschijnlijk dat dit gebruik van de data een aangepaste projectie nodig heeft die specifiek past bij die behorende context waarin de data gebruikt wordt.</p> <p></p> <p>Er kan veel kennis en ervaring gehaald worden uit het architectuurpatroon Event Sourcing. (Nogmaals) dit is geen 'silver bullet' en altijd en overal toe te passen. En tegelijk biedt het wel veel aanknopingspunten voor de digitale samenleving waar we naartoe werken.</p>"},{"location":"oplossingen/","title":"Oplossingen","text":"<p>OK. De probleemstelling is (dus) deze. We zijn in een transitie van papier naar digitaal. In die transitie is het ontstaan van data, de context waarin die ontstaat en waarin die gebruikt wordt relevant en daarmee worden taal en semantiek van belang om in acht te nemen. En dat allemaal in een steeds verdergaande automatisering.</p> <p>Tot welke oplossingen komen we dan? Zijn er wel oplossingen? Of zijn het meer oplossingsrichtingen en een droombeeld?</p>"},{"location":"oplossingen/#droombeeld","title":"Droombeeld","text":"<p>In de transitie van papier naar digitaal nemen we onszelf serieus door een andere richting te nemen dan zoals we al lang gedaan hebben. We durven de stap te maken om digitale processen te ontwerpen en in te richten. Uiteraard hebben we dezelfde zekerheden nodig als in de huidige situatie ... maar dat kunnen we w\u00e9l anders doen!</p> <p>Daarvoor ontwerpen we een netwerk van gebeurtenisgedreven registers waarin expliciet is gemaakt hoe datastromen gaan en hoe die overgangen van context zijn. Er verschijnt een netwerk van elkaar be\u00efnvloedende deelnemers, partijen, nodes die samenwerken in een organisme. Autonome onderdelen die zelf beslissingen maken, zelf gebeurtenissen produceren \u00e9n zorgen voor de traceerbaarheid wat de impact daarvan is. Vergaand geautomatiseerd dmv van open samenwerking en design for change.</p> <p>Dat biedt de mogelijkheid om expliciet vast te leggen welke data is gebruikt bij een beslissing. Daaruit kan ook worden geanalyseerd welke impact een mogelijk nieuw inzicht heeft op een genomen beslissing. Daarmee worden correcties mogelijk. Daarmee wordt het mogelijk om simulaties te doen van nieuwe regelingen en wetgeving. We kunnen regelingen ontwerpen die exact bereiken wat we voor ogen hebben!</p> <p>Hoewel deze gehele infrastructuur in open samenwerking tot stand gebracht moet worden, is het vooral het 'onzichtbare deel van de digitale overheid' dat 'gewoon werkt'. Het is er gewoon. Het werkt. En het werkt top! Daar kunnen burgers en bedrijven op rekenen. Het kan gevalideerd worden door toezichthouders. Er kunnen allerlei controlemechanismen ingebouwd worden. En het kan vooral gebruikt worden.</p> <p>Het gevolg van een subliem werkende digitale overheid is dat er ruimte komt om de mens meer centraal te stellen ipv computer systemen. We kunnen ontwerpen waar mensen een beslissing kunnen sturen en be\u00efnvloeden, zodat de juiste effecten bereikt worden. Het is mogelijk om te ontwerpen dat er ambtenaren zijn die burgers kunnen ondersteunen en helpen bij hun aanvragen, verwerkingen, verantwoordelijkheden en rechten. Een subliem werkende digitale overheid brengt een meer menselijke en persoonlijke overheid! </p>"},{"location":"oplossingen/#gebeurtenisgedreven-registers","title":"Gebeurtenisgedreven registers","text":"<p>Om te beginnen moeten we alle data als data gaan respecteren. Ook de documenten die aanleiding voor wijzigingen in de registraties zijn. En vooral die wijzigingen zelf. De data-gebeurtenissen of events. Deze beschrijven in detail met welke intentie een register gewijzigd wordt, wat die wijziging inhoudt, wie dat gedaan heeft, op welk moment, op welke plaats. En als dat gebeurd is, dan is dat gebeurd. Punt.</p> <p>Dat betekent om te beginnen dat van elk register moet worden ontworpen wat de data-gebeurtenissen/events zijn. Welke wijzigingen zijn er? En als er verschillende aanleidingen zijn, dan zijn dat zeer waarschijnlijk ook verschillende wijzigingen. Alleen al de intentie die daarin ligt.</p> <p>Vervolgens moet ook ontworpen worden hoe deze wijzigingen tot een projectie leiden. De primaire projectie is hier leidend en het meest belangrijk. Dit behoudt immers dezelfde waarde als de huidige registers. Met de events hebben we vooral beter vastgelegd hoe het register is geworden tot wat het geworden is.</p> <p>Vervolgens dient per context overgang ontworpen te worden welke projectie daar passend is. Zeer waarschijnlijk zijn dit projecties die afgeleid kunnen worden van de primaire projectie ... maar vaak vereenvoudigd kunnen worden. Onze inschatting is dat primaire projecties voor het domein, de context, waarin deze gewijzigd wordt, de meest complexe projectie nodig heeft. Er is namelijk vaak ook niet meer data beschikbaar dan in de eigen context en dus primaire projectie nodig is.</p> <p>Uiteraard kan er uniformiteit aangebracht worden in de secundaire projecties om het aantal transformaties en contextovergangen beperkt te houden. Dat is ook in het voordeel van de bronhouder. Dat is de actor, de organisatie die de wijzigingen doet en dus events produceert. Zij zijn namelijk verantwoordelijk voor de primaire projectie \u00e9n alle secundaire projecties die formeel vanuit die context worden geleverd aan alle contextovergangen. De bronhouder dient dan ook voorzieningen te leveren en te onderhouden voor het beheer en synchroniseren van alle projecties. Daarover later meer.</p> <p>Deze inrichting is nodig om te kunnen beantwoorden aan echt digitale processen. Daarin worden contract, processen, afspraken geautomatiseerd uitgevoerd. Dat betekent niet dat er geen menselijke beslissingen meer in zitten, maar die geven alleen richting in de verder geautomatiseerde uitvoering. Deze uitvoering dient duidelijk, traceerbaar en controleerbaar te zijn.</p> <p>Met events is het mogelijk om de traceerbaarheid te borgen tussen formele beslissingen, bij voorkeur door mensen gemaakte beslissingen, en de verschillende projecties. Doordat events als een 'stroom van events' worden opgeslagen en gepubliceerd, is het ook direct mogelijk om bij elke projectie te laten zien tot hoever deze projectie is bijgewerkt. Het geeft daarmee niet alleen mogelijkheden voor de traceerbaarheid maar ook voor een expliciete actualiteit!</p> <p>Als de events als kern van de beslissingen en wijzigingen gezien worden, wat in Event Sourcing het geval is, dan is ook de historie waterdicht vastgelegd. Vanuit de stroom van events kan elk historiemodel gevuld worden en kan maximaal herleid worden hoe 'het is gegaan en geweest'.</p> <p>Van events is expliciet wat de bron is. Van elk event is bekend wie de actor is die het heeft doen ontstaan, op welk tijdstip, locatie en intentie. Door projecties en de traceerbaarheid inclusief actualiteit is het mogelijk om per gebruik te bepalen in welke vorm een projectie het meest passend is. Als een bronhouder een API aanbiedt op de projectie en dat voorziet in de behoefte vanuit de vraag, dan is dat een gemakkelijk beheersbare en betrouwbare manier. Echter, het is met dezelfde kwaliteit mogelijk om een projectie op een andere locatie, dichter bij de vraag te realiseren. Dat is onder dezelfde kwaliteit want projectie, traceerbaarheid en actualiteit worden op exact dezelfde manier gerealiseerd als dat die projectie bij de bronhouder zou staan. Dat betekent wel dat de bronhouder verantwoordelijk is voor die projectie, ook als die niet in zijn data center staat. Daar zijn aanvullende afspraken voor nodig ... maar dat is goed mogelijk.</p> <p>Dus gebeurtenisgedreven registers bieden:</p> <ul> <li> traceerbaarheid van het register, de primaire projectie </li> <li> mogelijkheden voor secundaire projecties (en daarmee)</li> <li> ondersteuning voor context overgangen (transformaties, service   voorwaarden, data minimalisatie, etc)</li> <li> ondersteuning voor actualiteit per projectie </li> <li> ondersteuning projecties op 'afstand' (in het data center van een andere   partij)</li> <li> absolute duidelijkheid over oorsprong (actor, locatie, tijdstip, intentie)</li> <li> volledige ondersteuning voor historisch begrip (onderzoek, reconstructie,   historiemodellen, etc)</li> <li> mogelijkheden voor vergaande automatisering</li> </ul> <p>In bovenstaande worden events, data-gebeurtenissen en wijzigingen door elkaar gebruikt. Elke keer wordt hetzelfde bedoeld: data-gebeurtenissen z\u00edjn events wat de wijzigingen \u00edn een register zijn.</p>"},{"location":"oplossingen/#open-samenwerken","title":"Open samenwerken","text":"<p>In Nederland wordt al langer aan een 'open overheid' gewerkt, maar er is m\u00e9\u00e9r nodig. Om vertrouwen in projecties te hebben in een gebeurtenisgedreven register is het noodzakelijk dat anderen kunnen controleren en inzien hoe die projectie tot stand komt. Data en open data zijn 'slechts' \u00e9\u00e9n deel van de puzzel. Software is ook een puzzelstuk dat in ogenschouw genomen moet worden. Dat volgt ook uit de drive van automatisering.</p> <p>In de overgang van de ene context naar de andere betreft dat altijd meerdere partijen. Dat kunnen al afdelingen binnen een organisatie zijn, maar nog vaker zijn dat verschillende organisaties. Ook en vooral juist d\u00e1\u00e1r is vertrouwen van belang. Door open samen te werken aan dezelfde software die voor die overgang verantwoordelijk is, wordt vertrouwen en kwaliteit tussen de partijen haalbaar.</p> <p>Open samenwerken is in Open Source Software al jaren ontwikkeld en toegepast. We kunnen daar veel van leren in hoe dat werkt. Open samenwerken zou daarom ook 'open source werken' genoemd kunnen worden. 'source' is in deze vaak software, maar zou ook heel goed 'documenten', contracten of iets dergelijks kunnen zijn. Zie ook Achtergrond: Open Source.</p> <ul> <li> gebeurtenisgedreven registers kunnen niet   bestaan zonder open samenwerken!</li> <li> open samenwerken draagt bij aan de controleerbaarheid en daarmee het vertrouwen   in de digitale infrastructuur</li> </ul>"},{"location":"oplossingen/#netwerken-datastromen","title":"Netwerken &amp; Datastromen","text":"<p>Geen enkel proces of bedrijf staat nog volledig op zichzelf. De wereld is verbonden en dat groeit alleen nog maar verder! Hoe kunnen we daar anders 'antwoord' op geven dan de netwerken recht doen die zich aandienen? Welke verbindingen zijn er tussen de punten, nodes, onderdelen van het netwerk? Kunnen we dat inzichtelijk maken? Kunnen we de inzicht geven hoe de data stroomt?</p> <p>In een netwerk van gebeurtenisgedreven registers stromen events van het ene proces en organisatie naar het andere. Telkens zijn daar expliciete contextovergangen die in open samenwerking worden onderhouden. Op deze manier vertoont zich het netwerk van deelnemers dat verbonden is ... maar ook in welke richting welke data stroomt en hoe deze getransformeerd wordt in de overgangen van context. En dit kunnen we ontwerpen. We kunnen actief sturen op de netwerken en de datastromen om richting te geven aan hoe deze de maatschappij kunnen dienen.</p> <ul> <li> ontwerpen en inzichtelijk maken van netwerken ondersteunt het inzicht en   overzicht van gebeurtenisgedreven registers</li> <li> datastromen maken inzichtelijk hoe data van waar naar waar stroomt ... en hoe   daarop de sturen is</li> </ul>"},{"location":"oplossingen/#design-for-change","title":"Design for change","text":"<p>\u201cThe Only Constant in Life Is Change.\u201d - Heraclitus</p> <p>Ook in een wereld van software, zie ook automatisering, is er slechts \u00e9\u00e9n zekerheid: 'change', verandering. In een digitale overheid dienen we daarom gericht te zijn op het ondersteunen van verandering: Design for Change.</p> <p>Dat was wat agile destijds ook adresseerde. Mensen en hun interactie zijn belangrijker dan procedures en tools. Voor een digitale overheid betekent dit dat we vergaande automatisering doen met volledig digitale processen. En dat we \u00edn die processen mogelijkheden ontwerpen om menselijke interventie mogelijk te maken. Dat vraagt een mindset van automatiseren. Kennis van automatiseren. De drive om alles te automatiseren. En tegelijk, juist functies ontwerpen, inverentie mogelijkheden om bijsturing te kunnen doen als menselijk optreden vereist is. Hierin liggen ook mogelijkheden om 'de menselijke maat' en 'publieke waarden' toe te kunnen passen op individuele casu\u00efstiek.</p> <ul> <li> geautomatiseerde digitale processen</li> <li> publieke waarden en menselijke interventie mogelijkheden ingebouwd</li> </ul>"},{"location":"papier-naar-digitaal/","title":"Papier naar digitaal","text":"<p>Om te kunnen zien en bedenken welke richting de ontwikkelingen opgaan, is het van belang om naar de geschiedenis te kijken. In het digitale tijdperk en zeker vandaag de dag, anno 2024, is data een veelbesproken onderwerp. Maar waar komt de data van vandaag eigenlijk vandaan? Hoe is die data ontstaan?</p> <p>History doesn't repeat itself, but it often rhymes - (arguably) Mark Twain</p>"},{"location":"papier-naar-digitaal/#kort-overzicht","title":"Kort overzicht","text":"<ul> <li>1960 MechanisatieVan handgeschreven naar typemachines,   gestandaardiseerde formulieren</li> <li>1980 Automatisering databasesBoeken van registers in  databases Applicatie en database zijn vervlochten</li> <li>2000 Automatisering ApplicatiesApplicatie bevat logica en   zorgt voor data integriteitApplicatie en database staan los van elkaar</li> <li>2020 Automatisering API'sData kan los bevraagd worden door andere   applicatiesAPI First</li> <li>2040 DigitaliseringToevoeging van semantiek, events (gebeurtenissen),   geautomatiseerde procesuitvoering en open samenwerkingKetens van software + uitvoerbare   contracten + projecties</li> </ul>"},{"location":"papier-naar-digitaal/#1960-mechanisatie","title":"1960 Mechanisatie","text":"<p>Van handgeschreven naar typemachines, gestandaardiseerde formulieren</p> <p>Zo rond de jaren '60 van de vorige eeuw kwam de mechanisatie goed op gang. Waar voorheen handgeschreven papieren de standaard waren, kwamen er standaard formulieren en typemachines om schaalbaarder en herkenbaarder te gaan werken. Deze getypte formulieren waren echte papieren documenten en werken voorzien van 'natte handtekeningen'; door mensen met inkt ondertekende handtekeningen.</p> <p>Bij het kopen van een huis werden de aktes door de notaris opgesteld en uitgetypt. Nou ja, dat uittypen werd meestal door (vrouwelijke!) medewerkers gedaan. Nadat de benodigde handtekeningen gezet waren, bracht de notaris de aktes van die dag naar het kantoor van het Kadaster. Daar werden de aktes ingeschreven in het Openbaar Register en vervolgens door Kadaster clerken verwerkt in de Kadastrale Registratie. Dit was een boek (eigenlijk een serie boeken) waarin de huidige eigenaren werden bijgehouden. Als een akte werd verwerkt, werd de verkopende partij als eigenaar doorgehaald en de koper als nieuwe eigenaar toegevoegd, uiteraard voorzien van de juiste aandelen van dat eigendom en referentie naar het stuk, de akte. Deze boeken werden leggers genoemd. Een grootboek van de eigendommen van de percelen in Nederland.</p> <p></p>"},{"location":"papier-naar-digitaal/#1980-automatisering-databases","title":"1980 Automatisering Databases","text":"<p>Boeken van registers in databases Applicatie en database zijn vervlochten</p> <p>Zo naar de jaren '80 was automatisering een gemeen goed. Computersystemen als mainframes en ook de Personal Computer, de PC, werden toegankelijk en bruikbaar. De aandacht voor de automatisering waren voor de interne processen en vooral indexen. Het kunnen zoeken door informatie om sneller en gemakkelijker informatie te kunnen geven - via de telefoon en fax - waren de voornaamste drijfveren. In deze automatiseringsslag zijn vooral de leggers, de grootboeken in databases gestopt!</p> <p>In de jaren daarna kwam ook de uitwisseling van documenten op gang. Zo in de jaren '90 kwamen er oplossingen om documenten in een digitaal formaat te kunnen versturen. Eerst via email en later via internet. De nadruk en aandacht van deze automatisering was het transport van documenten tussen organisaties.</p> <p></p> <p>De technologische staat van die tijd is een rijke en grote database met veel functionaliteiten en een kleine applicatie laag daar omheen voor de gebruikersinteractie.</p> <p></p>"},{"location":"papier-naar-digitaal/#2000-automatisering-applicaties","title":"2000 Automatisering Applicaties","text":"<p>Applicatie bevat logica en zorgt voor data integriteitApplicatie en database staan los van   elkaar</p> <p>In de jaren 2000 werd software ontwikkeling een belangrijker onderdeel. Een database was 'maar' een deel van de gebruikerservaring en mogelijkheden. Een applicatie was veel rijker in logica en 'ergens' werd uiteraard de data uit de database wel gebruikt en gewijzigd. Waar voorheen alle wijzigingen door de database beheerd werden, werd nu de applicatie steeds meer verantwoordelijk voor de logica en integriteit van de data. De database was 'slechts' de opslag van data, de integriteit 'in rust' en het kunnen doorzoeken van de data.</p> <p>Dit zorgde ervoor dat de applicatie en de database los van elkaar kwamen te staan. De database had duidelijke taken en technische performance-eisen. De applicatie had andere verantwoordelijkheden en ook andere schalingsvereisten. In deze scheiding werd het duidelijker wat 'de data' was en wat 'de logica' was. En wat hun verhouding was.</p> <p></p>"},{"location":"papier-naar-digitaal/#2020-automatisering-apis","title":"2020 Automatisering API's","text":"<p>Data kan los bevraagd worden door andere applicatiesAPI First</p> <p>Met de groei van het internet en daarmee het integreren van ketens, werden de koppelvlakken tussen delen in de keten steeds relevanter. En waar in de voorgaande jaren de applicatie 'de baas' was, werd data steeds vaker direct uit de database gehaald en gebruikt. Het wijzigen van data gebeurt nog steeds door een applicatie met strikte logica, maar het gebruik van de data is ook mogelijk zonder de applicatie.</p> <p>Het wordt steeds belangrijker dat de data goed toegankelijk is. In het tijdperk van internet zijn het de internetprotocollen die daarvoor moeten zorgen. Data via HTTP kunnen ophalen, bevragen en in samenhang kunnen brengen met andere data. Dit vraagt om Application Programming Interfaces, oftewel API's. Met het gebruik en de opkomst van API's komt de data nog verder los van de muterende applicaties en wordt het steeds meer van belang om te weten wat die data betekent en in welke context deze ontstaan is. De roep om semantiek en de opkomst van technologie\u00ebn (zoals Linked Data) die daar invulling aan geven, is duidelijk zichtbaar.</p> <p></p>"},{"location":"papier-naar-digitaal/#2040-digitalisering","title":"2040 Digitalisering","text":"<p>Toevoeging van semantiek, events (gebeurtenissen), geautomatiseerde procesuitvoering en open   samenwerkingKetens van software + uitvoerbare contracten + projecties</p> <p>In 2020 is de basis van de automatisering nog steeds de papieren processen die geautomatiseerd zijn. Er komen echter technologie\u00ebn die digitaal ondertekenen mogelijk maken en smart contracts. Hiervoor is het noodzakelijk dat processen echt digitaal ontworpen zijn en is het nog meer van belang dat data goed voorzien is van metadata.</p> <p></p> <p>Het is vandaag nog niet mogelijk om precies te weten hoe die digitalisering eruit ziet in 2040. We kunnen niet in de toekomst kijken. Maar we kunnen w\u00e9l kijken wat er 'rijmt op het verleden'!</p> <p>De metadata van de data beschrijft niet alleen wat de data betekent. Het moet ook antwoord kunnen geven op waar de data vandaan komt. Waar is deze ontstaan? Onder welke voorwaarden / situatie? En met het aantal devices dat - via het internet - verbonden is aan elkaar, worden decentrale netwerken steeds meer van belang. Op welke manier is het mogelijk om autonoom te handelen en transacties uit te voeren die toch in het grote geheel integer zijn en blijven en impact daarin hebben?</p> <p></p>"},{"location":"papier-naar-digitaal/#transitie-naar-digitalisering","title":"Transitie naar digitalisering","text":"<p>Onze gooi naar de toekomst is een aantal concepten die we gezamenlijk denken in protocollen noemen. Waarom? Omdat digitale processen een door computers (machines) uitvoerbare contracten gaan uitvoeren waarin data-uitwisseling is meegenomen en de interactie met gebruikers, de mens, duidelijk en effectief is. Dat betekent dat de internetprotocollen die 'slechts' de verbinding tussen apparaten realiseert, uitgebreid moeten worden met smart contracts of iets wat daarop lijkt. Is het blockchain? Nee. Ja. Mischien. Blockchain regelt digitale processen wel op een nieuwe manier. Daar moeten we zeker lering van trekken. In ieder geval wel iets met transacties ... of gebeurtenissen, events. Maar er is meer. Het is ook Linked Data. Het is ook Open Standaarden, Open Source, open samenwerken. Het gaat namelijk over de uitwisseling in ketens. Dat betreft altijd meerdere partijen die gezamenlijk moeten werken en zorgdragen voor de smart contracts. Het betekent automatisering nog veel verder doorvoeren.</p> <p>Lees verder ... </p>"},{"location":"taal-en-semantiek/","title":"Taal en semantiek","text":"<p>In het ontstaan van data en het besef van verschillende contexten is ook de taal van groot belang. Vaak (altijd?) is de taal waarmee over wijzigen, muteren, veranderen wordt gesproken anders dan de taal wanneer gesproken wordt over informatie verstrekken en/of ophalen. Blijkbaar zijn daar andere woorden aan verbonden. En deze taalverschillen maken uit!</p> <p>Zie ook Ubiquitous Language uit Domain Driven Design</p> <p>Deze taalverschillen worden op dit moment nog weinig erkent. Dat komt mede door de transitie van papier naar digitaal. Daarin zijn we gewend geraakt om alleen de resultaat database als data te beschouwen. Maar de aanleiding en de veranderingen van die data ... negeren we meestal. Als we \u00e9cht gaan automatiseren en digitaliseren, moeten we die dus w\u00e9l in ogenschouw gaan nemen.</p> <p>Als taal en context van belang zijn, is het ook van belang om die verschillen goed vast te kunnen leggen. Wat betekent een term in een bepaalde context? Dit heet semantiek. Vaak hebben we dezelfde termen voor verschillende begrippen en de context bepaalt welke betekenis we bedoelen. Hoe dichter contexten tegen elkaar aan liggen, hoe moeilijker de verschillen zijn te onderscheiden. Met de groei van papier naar digitaal, het besef van context en taal, groeit te noodzaak voor semantiek.</p> <p>Linked Data is een technologische ontwikkeling waar semantiek een prominente rol heeft</p> <p>En dan zitten we ook nog in een continue verandering van automatisering!</p>"},{"location":"achtergrond/","title":"Achtergrond","text":"<p>Het concept denken in protocollen is gebaseerd op verschillende achtergronden: architectuurpatronen, concepten, practices, etc. Om deze te duiden en toe te lichten zijn deze als achtergrond opgenomen. Hier is daar dus meer informatie over te vinden.</p> <ul> <li>Agile werken</li> <li>Event Sourcing</li> <li>Open Source</li> </ul>"},{"location":"achtergrond/agile/","title":"Agile werken","text":"<p>Al een aantal jaren is 'agile' (of 'Agile') een bekende term en ook een misbruikte term. In de context van het denken in protocollen wordt het Agile Manifesto weer naar boven gehaald en toegelicht hoe deze te interpreteren.</p> <ul> <li>Individuals and interactions over processes and tools</li> <li>Working software over comprehensive documentation</li> <li>Customer collaboration over contract negotiation</li> <li>Responding to change over following a plan</li> </ul>"},{"location":"achtergrond/agile/#individuen-en-interactie-boven-processen-en-tools","title":"Individuen en interactie boven processen en tools","text":"<p>Mensen en hun interactie zijn belangrijker dan processen, procedures en 'computer says no', tools dus. Als we dat echt zo vinden, dan mogen we dus geen processen ontwerpen en procedures stellen die w\u00e9l boven mensen staan! Voorbeelden als Scrum, Kanban en Scaled Agile Framework (SAFe) doen een poging om invulling te geven aan 'agile' ... maar deze zouden NOOIT boven de mensen en hun interacties mogen staan ... als deze stelling waar blijft. En bij (de toepassing van) deze frameworks kun je daar je twijfels bij hebben.</p> <p>Maar hoe dan wel? Nou, er zit weldegelijk waarde in processen en tools. Bij geautomatiseerde processen ... zijn deze zelfs geautomatiseerd (tja, dat zegt het ook, niet?  ) En toch. Het hoort bij deze stelling dat we \u00edn onze geautomatiseerde processen mogelijkheden ontwerpen en inbouwen waar menselijke interventie mogelijk is! D\u00e1t is waarde geven aan processen en tools, namelijk het gemakkelijk maken en automatiseren daarvan, en tegelijk openingen en mogelijkheden realiseren voor interventie.</p>"},{"location":"achtergrond/agile/#werkende-software-boven-uitgebreide-documentatie","title":"Werkende software boven uitgebreide documentatie","text":"<p>Documentatie is belangrijk. Het is goed als je kunt teruglezen hoe iets ontstaan of ontworpen is. ECHTER ... de werkende software is wat er toegepast, gebruikt wordt! Daarom is de werkende software belangrijker dan de (uitgebreide) documentatie.</p> <p>Hoe is dat voor wetgeving? Wetgeving wordt steeds meer door software uitgevoerd. Wat is er dan belangrijker? De wet natuurlijk ... en toch zijn de regels die in software vastgelegd zijn, de daadwerkelijk uitgevoerde wet. Het is daarom zeer van belang dat deze regels duidelijk, transparant en te controleren zijn. Hier zit nog wel een 'gat' met de praktijk van vandaag </p>"},{"location":"achtergrond/agile/#klant-samenwerking-boven-contractonderhandeling","title":"Klant samenwerking boven contractonderhandeling","text":"<p>Samenwerking wordt hier boven contracten gesteld. Ja, contracten zijn belangrijk en uiteraard horen we de wet te volgen. En toch. Als het erop aankomt, is het belangrijk dat we gericht zijn op samenwerking ipv wetten en contracten. Hierin ligt ook vooral de waarde dat we samen verder komen en dus is samenwerking belangrijker dat 'gelijk hebben' of 'wat staat er in het contract'.</p> <p>Dit geldt voor samenwerking en/of contracten tussen overheden, tussen overheden en private partijen. Maar dit gaat ook over overheid en burger! Op welke manier zou het mogelijk zijn dat de overheid met de burger samenwerkt ipv contracten uitvoeren zonder betrokkenheid bij de burger?</p>"},{"location":"achtergrond/agile/#reagerend-op-verandering-boven-het-volgen-van-een-plan","title":"Reagerend op verandering boven het volgen van een plan","text":"<p>Zonder doel weten we niet waar we naartoe onderweg zijn. Zonder plan komen we niet tot ons doel. Maar als we een plan opstellen zouden we open moeten blijven voor veranderingen. Het is een zekerheid dat bij de uitvoering van ons plan er veranderingen op onze weg komen. Dat betekent niet dat we geen plan hoeven maken. De vraag is hoe we kunnen bijsturen en adopteren, kunnen reageren op die veranderingen.</p>"},{"location":"achtergrond/event-sourcing/","title":"Event Sourcing","text":"<p>//TODO event sourcing verder uitwerken</p> <p>Er valt zoveel te zeggen over Event Sourcing ... maar dat volgt later. Voor nu is dit vooral een 'placeholder' voor meer content. Het is in ieder geval een paradigma verschuiving (paradigm shift) van hoe we vandaag de dag systemen ontwerpen. Dit heeft ook oorzaak in papier naar digitaal.</p> <p></p> <p>Voor meer begrip en inspiratie wordt verwezen naar de video's van 'Marc explains' </p> <ul> <li>Event Sourcing NL   playlist met Level 0   NL, Level 1   NL, Level 2   NL, Level 3   NL</li> <li>Event Sourcing EN   playlist with Level 0   EN, Level 1   EN, Level 2   EN, Level 3   EN</li> </ul> <p>Enjoy!</p>"},{"location":"achtergrond/open-source/","title":"Open Source","text":"<p>// TODO open source uitwerken</p> <p>Open source is zoveel meer dan alleen maar open broncode. Het is nog meer een manier van werken dan dat het over broncode gaat. Het past echter ook goed bij broncode en wordt daar vaak toegepast. Daarom blijft het imago van een 'technische feestje' eraan plakken.</p> <p>Open source is een methodiek van samenwerken. Open samenwerken. Er zijn duidelijke regels en processen om samenwerking te faciliteren. Er zijn duidelijke rollen en verantwoordelijkheden. Tegelijk is het extreem open voor bijdragen van en door iedereen! Dat maakt deze methodiek juist zo krachtig. </p> <p>Meer info en hulp: opensource.pleio.nl</p>"},{"location":"principes/","title":"Principes voor protocol-denken","text":"<p>De volgende principes vormen de fundamenten voor denken in protocollen en betrouwbare gegevensuitwisseling in de digitale overheid:</p> <ul> <li> <p>Principe: Digitaal als fundament</p> <p>De samenleving digitaliseert - de overheid sluit daar bewust op aan door digitaal als uitgangspunt te nemen</p> </li> <li> <p>Principe: Context is altijd aanwezig</p> <p>Contextvrije gegevens bestaan niet - elk gegeven heeft betekenis binnen een specifieke context</p> </li> <li> <p>Principe: Focus op verandering</p> <p>Change over state als fundamenteel uitgangspunt</p> </li> <li> <p>Principe: Meerdere views standaard</p> <p>Nooit \u00e9\u00e9n model of API - altijd meerdere perspectieven</p> </li> <li> <p>Principe: Open samenwerking</p> <p>Protocollen ontstaan en evolueren alleen in open samenwerking tussen alle deelnemers</p> </li> </ul> <p>Deze principes ondersteunen de visie van protocol-denken door concrete richtlijnen te bieden voor het ontwerpen van betrouwbare, schaalbare en transparante systemen voor gegevensuitwisseling tussen overheidsorganisaties.</p>"},{"location":"principes/context-is-altijd-aanwezig/","title":"Principe: context is altijd aanwezig<sup>1</sup>","text":"<p>Contextvrije gegevens (data) bestaan niet - elk gegeven heeft betekenis binnen een specifieke context</p>"},{"location":"principes/context-is-altijd-aanwezig/#het-probleem","title":"Het probleem","text":"<p>We doen vaak alsof gegevens (data) \"neutraal\" en \"contextvrij\" zijn. Dit leidt tot problemen:</p> <ul> <li>Betekenisverlies: Gegevens krijgen andere betekenis in nieuwe contexten</li> <li>Verkeerde interpretaties: Dezelfde waarde betekent iets anders in verschillende systemen  </li> <li>Integratiefouten: Gegevens worden \"zomaar\" gekopieerd zonder begrip van context</li> <li>Synchronisatieproblemen: Wijzigingen in bronnen bereiken een gebruiksdoel met verkeerde betekenis</li> <li>Protocol failures: Inter-organisatie protocollen falen omdat context niet wordt overgedragen</li> <li>Semantische chaos: Organisaties praten langs elkaar heen over \"dezelfde\" gegevens</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#het-principe-context-is-altijd-aanwezig","title":"Het principe: context is altijd aanwezig","text":"<p>Context is fundamenteel aanwezig in alle gegevens (data). Er bestaan geen contextvrije gegevens. Dit betekent:</p>"},{"location":"principes/context-is-altijd-aanwezig/#kernprincipes","title":"Kernprincipes","text":"<ol> <li>Context is inherent - Elk gegeven heeft betekenis binnen specifieke bounded contexts</li> <li>Context bepaalt interpretatie - Dezelfde waarde kan verschillende betekenissen hebben</li> <li>Contextovergang vereist design - Data transformatie tussen contexten moet bewust ontworpen worden</li> <li>Context moet expliciet - Maak contexten zichtbaar in informatiemodellen en interfaces</li> </ol>"},{"location":"principes/context-is-altijd-aanwezig/#voorbeelden","title":"Voorbeelden","text":""},{"location":"principes/context-is-altijd-aanwezig/#voorbeeld-1-adres-in-verschillende-contexten","title":"Voorbeeld 1: adres in verschillende contexten","text":"<p>BRP context: </p> <pre><code>Adres = WoonAdres {\n  straat: \"Hoofdstraat 1\",\n  betekenis: \"Officieel ingeschreven woonadres\",\n  geldigheid: \"Vanaf inschrijfdatum tot uitschrijving\",\n  verificatie: \"Door gemeente gevalideerd\"\n}\n</code></pre> <p>Logistiek context:</p> <pre><code>Adres = BezorgAdres {\n  straat: \"Hoofdstraat 1\", \n  betekenis: \"Adres waar pakket afgeleverd kan worden\",\n  geldigheid: \"Tot klant andere bezorgadres opgeeft\",\n  verificatie: \"Door klant opgegeven, door bezorger bevestigd\"\n}\n</code></pre> <p>Transformatie:  - BRP WoonAdres kan basis zijn voor BezorgAdres - Maar klant kan ander BezorgAdres kiezen - Context bepaalt welke regels en validaties gelden</p>"},{"location":"principes/context-is-altijd-aanwezig/#voorbeeld-2-naam-in-verschillende-registers","title":"Voorbeeld 2: naam in verschillende registers","text":"<p>BRP context: \"Marie de Wit-Jansen\" - Juridische naam na huwelijk - Officieel, kan alleen via ambtenaar gewijzigd - Gebruikt voor offici\u00eble documenten</p> <p>Zorgverzekering context: \"Marie Jansen\" - Naam zoals gebruikt in zorgcommunicatie - Kan door klant gewijzigd worden - Gebruikt voor correspondentie en declaraties</p> <p>Contextovergang:  - BRP naam is uitgangspunt - Zorgverzekeraar laat klant \"communicatienaam\" kiezen - Transformatie is bewuste bedrijfsregel, niet technische mapping</p>"},{"location":"principes/context-is-altijd-aanwezig/#voorbeeld-3-personen-register","title":"Voorbeeld 3: personen register","text":"<p>Traditioneel personen register:</p> <ul> <li>Persoon object</li> </ul> <p>Verandering-gericht personen register:</p> <ul> <li>Geboren</li> <li>Verhuisd</li> <li>Getrouwd</li> <li>Gescheiden</li> <li>Overleden</li> </ul> <p>Let op: Dit voorbeeld illustreert ook Focus op verandering - dat is geen toeval. Goede principes versterken elkaar en leiden tot dezelfde ontwerpkeuzes.</p>"},{"location":"principes/context-is-altijd-aanwezig/#mindset-shift","title":"Mindset shift","text":"<p>Context is altijd aanwezig vereist een fundamentele shift: van contextvrij denken naar context bewust denken. Hier is de typische denkevolutie:</p>"},{"location":"principes/context-is-altijd-aanwezig/#stap-0-contextvrij-denken-traditioneel","title":"Stap 0: contextvrij denken (traditioneel)","text":"<pre><code>// Denken: \"Gegevens zijn neutraal, kopieer gewoon\"\nSELECT naam, adres FROM personen WHERE id = 123\nINSERT INTO andere_tabel (naam, adres) VALUES ('Jan Jansen', 'Hoofdstraat 1')\n</code></pre> <p>Probleem: - Naam uit BRP heeft andere betekenis dan naam in CRM - Adres uit BAG verschilt van adres in logistiek systeem - Geen begrip waarom gegevens zo zijn zoals ze zijn - Geen validatie of transformatie</p>"},{"location":"principes/context-is-altijd-aanwezig/#stap-1-bewustwording-van-verschillen","title":"Stap 1: bewustwording van verschillen","text":"<pre><code>// Denken: \"Er zijn wel verschillen, maar we mappen wel\"\nBRP_naam -&gt; CRM_naam (met simpele mapping)\nBAG_adres -&gt; Logistiek_adres (met veld conversie)\n</code></pre> <p>Probleem: Technische mapping zonder begrip van business context. Werkt soms, faalt onverwacht.</p> <p>Verbetering: Eerste bewustwording dat systemen verschillend zijn.</p>"},{"location":"principes/context-is-altijd-aanwezig/#stap-2-context-als-metadata","title":"Stap 2: context als metadata","text":"<pre><code>// Denken: \"We voegen context toe als extra veld\"\nSELECT naam, adres, 'BRP' as bron FROM personen\nSELECT naam, adres, 'CRM' als bron FROM klanten\n</code></pre> <p>Probleem: Context wordt als extra informatie behandeld, niet als fundamentele eigenschap.</p> <p>Verbetering: Context wordt zichtbaar, maar nog steeds als bijzaak.</p>"},{"location":"principes/context-is-altijd-aanwezig/#stap-3-context-bewust-denken","title":"Stap 3: context bewust denken","text":"<pre><code>// Denken: \"Context bepaalt betekenis - ontwerp transformatie bewust\"\nBRP_Context: {\n  naam: JuridischeNaam(voornaam, tussenvoegsel, achternaam),\n  betekenis: \"Offici\u00eble naam volgens GBA/BRP\",\n  geldigheid: \"Per registratie moment\"\n}\n\nCRM_Context: {\n  naam: ContactNaam(roepnaam, achternaam),\n  betekenis: \"Naam voor commerci\u00eble communicatie\", \n  geldigheid: \"Tot klant dit wijzigt\"\n}\n\nTransformatie: BRP_JuridischeNaam -&gt; CRM_ContactNaam (bewuste keuze, gedocumenteerd)\n</code></pre> <p>Doorbraak: Context wordt onderdeel van het informatiemodel. Transformaties zijn expliciete designbeslissingen.</p>"},{"location":"principes/context-is-altijd-aanwezig/#waarom-stap-3-de-beste-oplossing-is","title":"Waarom stap 3 de beste oplossing is","text":"<ul> <li>Expliciete semantiek: Wat betekenen deze gegevens hier?</li> <li>Bewuste transformaties: Hoe gaat betekenis van A naar B?</li> <li>Gedocumenteerde keuzes: Waarom is dit zo gemodelleerd?</li> <li>Voorspelbare resultaten: Systemen gedragen zich consistent</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#voordelen","title":"Voordelen","text":"<ul> <li>Correcte interpretatie: Gegevens worden begrepen zoals bedoeld</li> <li>Betere integraties: Bewuste transformaties tussen systemen</li> <li>Minder fouten: Expliciete context voorkomt misverstanden</li> <li>Rijkere semantiek: Betekenis wordt behouden en uitgebreid</li> <li>Betere traceability: Context vertelt waar data vandaan komt en waarom</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#relatie-met-protocol-denken","title":"Relatie met protocol-denken","text":"<p>Context is essentieel voor protocol-denken omdat protocollen fundamenteel gaan over het overbruggen van verschillende contexten:</p>"},{"location":"principes/context-is-altijd-aanwezig/#protocollen-zijn-context-overbrugging","title":"Protocollen zijn context-overbrugging","text":"<p>Moderne inter-organisatie protocollen zijn niet alleen dataformaten, maar context-vertalers: - Semantische mapping: Protocol definieert hoe betekenis van organisatie A wordt vertaald naar organisatie B - Context preservation: Rijke context informatie blijft behouden tijdens uitwisseling - Bounded context integration: Dikke protocollen bevatten expliciete regels voor context-overgangen</p>"},{"location":"principes/context-is-altijd-aanwezig/#context-maakt-dikke-protocollen-mogelijk","title":"Context maakt dikke protocollen mogelijk","text":"<p>Protocol-denken evolueert naar protocollen die meer dan transport regelen: - Business rule validation: Context bepaalt welke validaties gelden in welke situaties - Semantic consistency: Protocollen garanderen dat betekenis consistent blijft - Context-aware workflows: Verschillende organisaties kunnen verschillende contexten hanteren binnen hetzelfde protocol</p>"},{"location":"principes/context-is-altijd-aanwezig/#context-is-de-basis-voor-netwerken-van-datastromen","title":"Context is de basis voor netwerken van datastromen","text":"<p>Netwerken van datastromen werken alleen met expliciete context: - Multi-organizational views: Elke organisatie heeft zijn eigen context, maar kan deelnemen aan gedeelde protocollen - Context evolution: Nieuwe organisaties kunnen toetreden door hun context te mappen op bestaande protocollen - Federated semantics: Verschillende definities van \"hetzelfde\" concept kunnen naast elkaar bestaan</p>"},{"location":"principes/context-is-altijd-aanwezig/#relatie-met-andere-principes","title":"Relatie met andere principes","text":"<ul> <li>Versterkt Focus op verandering - events behouden context van veranderingen</li> <li>Ondersteunt Meerdere views standaard - elke view heeft eigen context</li> <li>Basis voor contextovergang-ontwerp - expliciete context transformaties</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#waarom-dit-principe-altijd-geldt","title":"Waarom dit principe altijd geldt","text":"<p>Context is niet optioneel - het is fundamenteel aanwezig in alle business processen:</p>"},{"location":"principes/context-is-altijd-aanwezig/#in-elk-register","title":"In elk register","text":"<p>Elk register heeft zijn eigen business context: - BRP: Juridisch-administratieve context van burgerregistratie - BAG: Geo-administratieve context van adressen en gebouwen - Handelsregister: Economische context van bedrijfsvoering - Zorgregisters: Medische context van zorgverlening</p>"},{"location":"principes/context-is-altijd-aanwezig/#bij-elke-gegevensuitwisseling","title":"Bij elke gegevensuitwisseling","text":"<p>Zodra gegevens een systeemgrens overschrijden, wijzigt de context: - Van interne opslag naar externe communicatie - Van administratief naar operationeel gebruik - Van historisch naar actueel perspectief - Van detail naar samenvatting niveau</p>"},{"location":"principes/context-is-altijd-aanwezig/#in-alle-business-processen","title":"In alle business processen","text":"<p>Elk proces heeft eigen betekenis voor dezelfde gegevens: - Aanvragen: Context van burger die iets wil - Toetsen: Context van ambtenaar die valideert - Verstrekken: Context van afnemer die gebruikt - Archiveren: Context van juridische bewaring</p> <p>Conclusie: Context negeren is een ontwerpfout, niet een keuze. Dit principe geldt altijd.</p>"},{"location":"principes/context-is-altijd-aanwezig/#implementatie-overwegingen","title":"Implementatie overwegingen","text":"<p>Voordelen van context bewust ontwerp: - Minder integratiefouten door expliciete transformaties - Betere gegevenskwaliteit door context validatie - Duidelijkere communicatie tussen teams over data betekenis - Flexibelere systemen die kunnen evolueren met context</p>"},{"location":"principes/context-is-altijd-aanwezig/#protocol-specifieke-uitdagingen","title":"Protocol-specifieke uitdagingen:","text":"<ul> <li>Context governance: Wie bepaalt de \"offici\u00eble\" betekenis van concepten in protocollen?</li> <li>Semantic versioning: Hoe evolueren contexten zonder protocollen te breken?</li> <li>Multi-party consensus: Hoe bereik je overeenstemming over betekenis tussen organisaties?</li> <li>Context conflict resolution: Wat gebeurt er als organisaties verschillende definities hebben?</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#technische-uitdagingen","title":"Technische uitdagingen:","text":"<ul> <li>Meer complexiteit in informatiemodellen en transformaties</li> <li>Performance overhead door context validatie en transformatie</li> <li>Cross-boundary validation: Context validatie over organisatiegrenzen heen</li> <li>Semantic drift detection: Herkennen wanneer context-betekenis onbedoeld verandert</li> </ul>"},{"location":"principes/context-is-altijd-aanwezig/#organisatorische-uitdagingen","title":"Organisatorische uitdagingen:","text":"<ul> <li>Team alignment vereist begrip van business contexten</li> <li>Protocol governance: Wie beheert gedeelde context-definities?</li> <li>Change management: Context wijzigingen hebben impact op alle deelnemers</li> <li>Documentatie van context en transformaties is essentieel voor protocol-werking</li> <li>Protocol als context-contract: Protocollen documenteren exact wat elk veld betekent in elke context</li> <li>Context evolution management: Backwards compatibility en gradual migration tussen context-versies</li> </ul> <p>Dit principe vormt de basis voor betrouwbare gegevensuitwisseling tussen organisaties met verschillende contexten via robuuste protocollen.</p> <ol> <li> <p>NOTE Oorspronkelijk ontstaan uit en overgenomen vanuit project Uit betrouwbare bron en aangepast naar protocol-denken\u00a0\u21a9</p> </li> </ol>"},{"location":"principes/digitaal-als-fundament/","title":"Principe: digitaal als fundament<sup>1</sup>","text":"<p>De samenleving digitaliseert - de overheid sluit daar bewust op aan door digitaal als uitgangspunt te nemen</p>"},{"location":"principes/digitaal-als-fundament/#het-probleem","title":"Het probleem","text":"<p>De overheid blijft vasthouden aan processen die ontworpen zijn voor papieren uitvoering, terwijl de samenleving fundamentaal digitaal is geworden. Dit leidt tot verschillende problemen:</p> <ul> <li>Beperkte mogelijkheden: Papier kan slechts \u00e9\u00e9n view vastleggen en geen meerdere perspectieven bieden</li> <li>Statische vastlegging: Focus ligt op eindtoestand in plaats van op veranderingen</li> <li>Contextverlies: Alleen wat fysiek op papier past kan worden vastgelegd, context gaat verloren</li> <li>Moeilijke aanpassingen: Correcties betekenen doorhalingen, geschiedenis verdwijnt</li> <li>Maatschappelijke aansluiting: Burgers en bedrijven werken digitaal, overheid blijft achter</li> <li>Protocol rigiditeit: Papieren protocollen zijn statisch en moeilijk aan te passen aan nieuwe situaties</li> </ul> <p>De achtergrond en ontstaan is begrijpelijk als je de historie van papier naar digitaal. Maar daar moeten we dus een verandering in teweegbrengen.</p>"},{"location":"principes/digitaal-als-fundament/#het-principe-digitaal-als-fundament","title":"Het principe: digitaal als fundament","text":"<p>Digitaal wordt het primaire domein van overheidsdienstverlening. Papier wordt een afdruk of uitzondering, niet het uitgangspunt.</p>"},{"location":"principes/digitaal-als-fundament/#kernprincipes","title":"Kernprincipes","text":"<ol> <li>Digitaal eerst: Alle processen worden primair digitaal ontworpen</li> <li>Papier als afdruk: Fysieke documenten zijn kopie\u00ebn of afschriften van digitale bronnen</li> <li>Schaal als fundament: Digitaal maakt analyses, wijzigingen en processen mogelijk op een schaal die met papier ondenkbaar was</li> <li>Menselijke tussenkomst mogelijk: Op elk punt kan handmatig worden ingegrepen of bijgestuurd</li> <li>Publieke waarden centraal: Digitalisering dient democratie en transparantie</li> </ol>"},{"location":"principes/digitaal-als-fundament/#praktische-betekenis","title":"Praktische betekenis","text":"<pre><code>Traditionele aanpak:\n1. Papieren formulier invullen\n2. Handmatig invoeren in systeem  \n3. Papier archiveren als 'bron van waarheid'\n\nDigitaal fundament en protocol-denken aanpak:\n1. Digitale proces als primaire interactie\n2. Automatische verwerking en validatie\n3. Papier is afdruk indien nodig (niet als bron, wel als bewijs)\n</code></pre>"},{"location":"principes/digitaal-als-fundament/#voorbeelden","title":"Voorbeelden","text":""},{"location":"principes/digitaal-als-fundament/#voorbeeld-1-huwelijksregistratie","title":"Voorbeeld 1: Huwelijksregistratie","text":"<p>Traditioneel (papier fundament):</p> <pre><code>1. Papieren formulier \"aangifte huwelijk\"\n2. Ambtenaar neemt gegevens over naar computersysteem\n3. Papieren akte wordt ondertekend\n4. Papieren formulier wordt gearchiveerd\n5. Bij opvragen: Computer print \"huwelijksakte\" (afschrift) of kopie maken van papieren akte\n</code></pre> <p>Problemen: Dubbele vastlegging, papier als bron betekent verlies bij brand/verlies.</p> <p>Digitaal fundament:</p> <pre><code>1. Digitaal proces \"registreer huwelijk\"\n2. Directe validatie (zijn beide personen ongehuwd? juiste leeftijd?)\n3. Event \"HuwelijkGeregistreerd\" wordt opgeslagen\n4. (Automatische updates naar BRP, GBA, etc.)\n5. Huwelijksakte = digitale view/document\n6. Papieren afdruk indien gewenst (niet als primaire bron)\n</code></pre> <p>Voordelen: E\u00e9n bron, automatische validatie, directe koppelingen, geen verlies mogelijk.</p>"},{"location":"principes/digitaal-als-fundament/#voorbeeld-2-bouwvergunning","title":"Voorbeeld 2: Bouwvergunning","text":"<p>Traditioneel (papier fundament):</p> <pre><code>1. Papieren aanvraag met tekeningen\n2. Ambtenaar controleert handmatig tegen bestemmingsplan (ook papier)\n3. Fysieke dossiermap met alle stukken\n4. Papieren beschikking\n5. Bij wijziging: nieuwe papieren in dossier\n</code></pre> <p>Digitaal fundament:</p> <pre><code>1. Digitale aanvraag met 3D model, BIM en CAD bestanden\n2. Automatische toets tegen digitaal bestemmingsplan\n3. Digitaal dossier met alle historie en wijzigingen\n4. Beschikking als digitaal document (met digitale handtekeningen)\n5. Realtime inzicht voor aanvrager in status en historie\n6. Papieren afdruk voor wie dat prefereert\n</code></pre>"},{"location":"principes/digitaal-als-fundament/#voorbeeld-3-omgaan-met-wettelijke-papier-vereisten","title":"Voorbeeld 3: Omgaan met wettelijke papier-vereisten","text":"<p>Situatie: Sommige wetten vereisen nog papieren ondertekening.</p> <p>Fout (papier leidend maken):</p> <pre><code>1. Heel proces op papier vanwege handtekening-vereiste\n2. Digitaal wordt bijzaak\n3. Verlies van alle digitale voordelen\n</code></pre> <p>Goed (digitaal fundament behouden):</p> <pre><code>1. Heel proces digitaal\n2. Op moment van handtekeningen: papieren view genereren\n3. Handtekening op papier, scan terug naar digitaal dossier  \n4. Papier archiveren als wettelijke vereiste, digitaal blijft leidend\n5. Eventueel: werken naar digitale handtekeningen in toekomstige wetgeving\n</code></pre>"},{"location":"principes/digitaal-als-fundament/#mindset-shift","title":"Mindset shift","text":"<p>Digitaal als fundament vereist een fundamentele shift: van \"digitaal als kopie van papier\" naar \"papier als afdruk van digitaal\".</p>"},{"location":"principes/digitaal-als-fundament/#stap-0-papierdenken-traditioneel-nog-steeds-herkenbaar","title":"Stap 0: papierdenken (traditioneel, nog steeds herkenbaar)","text":"<pre><code>// Denken: \"We maken een digitale versie van ons papieren proces\"\n1. Ontwerp papieren formulier\n2. Bouw website die hetzelfde formulier toont  \n3. Print resultaat uit voor archief\n4. Papier blijft leidend\n</code></pre> <p>Probleem:  - Digitaal wordt beperkt door papier mogelijkheden - Geen gebruik van digitale voordelen (validatie, berekeningen, links) - Dubbele vastlegging en foutgevoeligheid</p>"},{"location":"principes/digitaal-als-fundament/#stap-1-digitale-optimalisatie-bekende-situatie-anno-2025","title":"Stap 1: digitale optimalisatie (bekende situatie anno 2025)","text":"<pre><code>// Denken: \"We maken het digitale proces beter dan papier\"\n1. Bouw echte digitale workflows\n2. Gebruik validatie, berekeningen, automatisering\n3. Papier alleen voor wettelijke vereisten\n4. Digitaal wordt leidend\n</code></pre> <p>Probleem: Nog steeds hybride - soms leidend digitaal, soms papier.</p> <p>Verbetering: Digitale voordelen worden benut, maar inconsistent.</p>"},{"location":"principes/digitaal-als-fundament/#stap-2-digitaal-fundament-denken","title":"Stap 2: digitaal fundament denken","text":"<pre><code>// Denken: \"We ontwerpen voor digitaal, papier is een view\"\n1. Alle gegevens zijn primair digitaal\n2. Papier is \u00e9\u00e9n van de mogelijke presentaties en kan dienen als bewijs\n3. Menselijke tussenkomst op elk digitaal punt mogelijk\n4. Publieke waarden ingebouwd in digitaal ontwerp\n</code></pre> <p>Doorbraak: Digitaal wordt het natuurlijke domein, papier een hulpmiddel.</p>"},{"location":"principes/digitaal-als-fundament/#waarom-stap-2-de-oplossing-is","title":"Waarom stap 2 de oplossing is","text":"<ul> <li>Onbeperkte mogelijkheden: Geen papier-beperkingen op wat mogelijk is</li> <li>Consistentie: E\u00e9n bron van waarheid (digitaal), meerdere presentaties</li> <li>Schaalbaarheid: Nieuwe digitale services zijn eenvoudig toe te voegen</li> <li>Toekomstbestendigheid: Groeit mee met technologische ontwikkelingen</li> </ul>"},{"location":"principes/digitaal-als-fundament/#voordelen","title":"Voordelen","text":"<ul> <li>Enabler voor andere principes: Maakt meerdere views en focus op verandering mogelijk</li> <li>Schaalsprong mogelijk: Digitaal maakt analyses, wijzigingen en processen mogelijk op een schaal die met papier ondenkbaar was</li> <li>Maatschappelijke aansluiting: Overheid werkt zoals burgers en bedrijven dat gewend zijn of zouden wensen</li> <li>Transparantie: Digitale gegevens kunnen beter toegankelijk worden gemaakt</li> <li>Effici\u00ebntie: Wegvallen van dubbele vastlegging (met problematiek) en handmatige overdracht</li> <li>Innovatiemogelijkheden: Nieuwe services en netwerken van datastromen worden mogelijk</li> <li>Democratische versterking: Betere toegang tot overheidsinformatie door digitale infrastructuur</li> <li>Interoperabiliteit: Protocollen maken uitwisseling tussen systemen mogelijk</li> </ul>"},{"location":"principes/digitaal-als-fundament/#relatie-met-protocol-denken","title":"Relatie met protocol-denken","text":"<p>Digitaal als fundament is een voorwaarde voor protocol-denken. Zonder digitaal fundament kunnen moderne protocollen niet bestaan omdat:</p>"},{"location":"principes/digitaal-als-fundament/#protocollen-vereisen-digitale-infrastructuur","title":"Protocollen vereisen digitale infrastructuur","text":"<ul> <li>Dikke protocollen: Protocol-denken gaat naar protocollen die validatie, governance en business logica bevatten - dit kan alleen digitaal</li> <li>Netwerk-effecten: Netwerken van datastromen ontstaan alleen als alle deelnemers digitaal werken</li> <li>Automatisering: Protocollen kunnen alleen automatisch afgedwongen worden in digitale omgeving</li> </ul>"},{"location":"principes/digitaal-als-fundament/#gebeurtenissen-maken-protocollen-mogelijk-over-organisaties","title":"Gebeurtenissen maken protocollen mogelijk over organisaties","text":"<ul> <li>Asynchrone samenwerking: Focus op verandering zorgt dat organisaties kunnen samenwerken zonder real-time afhankelijkheden</li> <li>Causaliteit behoud: Gebeurtenissen bewaren tijdsorde en context, cruciaal voor inter-organisatie protocollen</li> <li>Robuustheid: Protocollen kunnen werken ondanks netwerkvertragingen en verschillende verwerkingssnelheden</li> </ul>"},{"location":"principes/digitaal-als-fundament/#digitale-context-maakt-rijke-protocollen-mogelijk","title":"Digitale context maakt rijke protocollen mogelijk","text":"<ul> <li>Contextbehoud: Digitale systemen kunnen de volledige context van gebeurtenissen vastleggen en doorgeven</li> <li>Meerdere perspectieven: Meerdere views voor verschillend gebruik, binnen organisatie en over organisatiegrenzen heen, geco\u00f6rdineerd via protocollen</li> <li>Open ontwikkeling: Alleen in open samenwerking kunnen digitale protocollen ontwikkeld worden</li> </ul>"},{"location":"principes/digitaal-als-fundament/#relatie-met-andere-principes","title":"Relatie met andere principes","text":"<p>Dit principe is het fundament voor alle andere principes:</p> <ul> <li>Maakt mogelijk: Meerdere views standaard - papier kan slechts \u00e9\u00e9n view tonen</li> <li>Maakt mogelijk: Focus op verandering - papier kan moeilijk wijzigingen traceren  </li> <li>Maakt mogelijk: Context is altijd aanwezig - papier heeft beperkte ruimte voor context</li> </ul>"},{"location":"principes/digitaal-als-fundament/#waarom-dit-principe-altijd-geldt","title":"Waarom dit principe altijd geldt","text":""},{"location":"principes/digitaal-als-fundament/#maatschappelijke-realiteit","title":"Maatschappelijke realiteit","text":"<p>De samenleving is al digitaal: - Burgers: Bankieren, winkelen, communiceren digitaal - Bedrijven: Administratie, facturering, logistiek digitaal - Internationale handel: Vereist digitale uitwisseling - Jongere generaties: Kennen papier-eerst niet meer en verwachten directe beantwoording</p>"},{"location":"principes/digitaal-als-fundament/#schaalvoordelen","title":"Schaalvoordelen","text":"<p>Digitaal fundament maakt mogelijk: - Automatische koppelingen: Registers kunnen elkaar updaten - Realtime inzicht: Geen wachten op papieren overdracht - Data-gedreven beleid: Inzichten uit digitale gegevens - Innovatie: Nieuwe services op bestaande digitale basis</p>"},{"location":"principes/digitaal-als-fundament/#publieke-waarden","title":"Publieke waarden","text":"<p>Digitaal fundament ondersteunt democratie: - Toegankelijkheid: Digitale diensten altijd bereikbaar - Transparantie: Gemakkelijker inzicht in overheidshandelen - Effectiviteit: Snellere, betere dienstverlening - Gelijkheid: Zelfde service voor iedereen, onafhankelijk van locatie</p>"},{"location":"principes/digitaal-als-fundament/#van-dunne-naar-dikke-protocollen","title":"Van dunne naar dikke protocollen","text":"<p>Digitaal fundament maakt de evolutie mogelijk van: - Dunne protocollen (traditioneel internet): Minimale afspraken over transport, business logica in applicaties - Dikke protocollen (protocol-denken): Protocollen die validatie, governance en afdwingbare afspraken bevatten</p> <p>Deze transitie is alleen mogelijk met digitaal als fundament omdat dikke protocollen automatisering en geautomatiseerde validatie vereisen.</p>"},{"location":"principes/digitaal-als-fundament/#implementatie-overwegingen","title":"Implementatie overwegingen","text":""},{"location":"principes/digitaal-als-fundament/#technische-aspecten","title":"Technische aspecten","text":"<ul> <li>Beveiliging: Digitale gegevens vereisen robuuste beveiliging</li> <li>Backup en archivering: Digitale duurzaamheid langer dan papier</li> <li>Toegankelijkheid: Digitale diensten voor iedereen bruikbaar</li> <li>Standaarden: Gebruik open, toekomstbestendige formaten</li> </ul>"},{"location":"principes/digitaal-als-fundament/#organisatorische-aspecten","title":"Organisatorische aspecten","text":"<ul> <li>Cultuurverandering: Medewerkers moeten digitaal denken omarmen</li> <li>Juridische aanpassingen: Wetgeving moet digitaal mogelijk maken</li> <li>Geleidelijke overgang: Van hybride naar volledig digitaal fundament</li> <li>Gebruikersondersteuning: Help mensen bij overgang naar digitaal</li> </ul>"},{"location":"principes/digitaal-als-fundament/#maatschappelijke-aspecten","title":"Maatschappelijke aspecten","text":"<ul> <li>Digitale inclusie: Niemand mag worden uitgesloten</li> <li>Transparantie: Digitale processen moeten inzichtelijk zijn</li> <li>Democratische controle: Digitale systemen moeten controleerbaar blijven</li> <li>Privacy by design: Bescherming ingebouwd vanaf het begin</li> </ul> <p>Dit principe legt het fundament waarop moderne overheidsregistraties kunnen worden gebouwd.</p> <ol> <li> <p>NOTE Oorspronkelijk ontstaan uit en overgenomen vanuit project Uit betrouwbare bron en aangepast naar protocol-denken\u00a0\u21a9</p> </li> </ol>"},{"location":"principes/focus-op-verandering/","title":"Principe: focus op verandering<sup>1</sup>","text":"<p>Change over state als fundamenteel uitgangspunt</p>"},{"location":"principes/focus-op-verandering/#het-probleem","title":"Het probleem","text":"<p>Huidige registers zijn 'slechts' gericht op de resulterende view en deze view \u00eds het eigenlijke register. Dit leidt tot verschillende problemen:</p> <ul> <li>Verlies van context: Waarom is een gegeven zo geworden?</li> <li>Geen spoor van wijzigingen: Welke stappen hebben geleid tot de huidige toestand?</li> <li>Moeilijke correcties: Hoe corrigeer je iets zonder de historie te verliezen?</li> <li>Beperkte compliance: Hoe toon je aan dat processen correct zijn gevolgd?</li> <li>Protocol fragiliteit: Systemen kunnen niet reageren op wijzigingen van andere partijen</li> <li>Synchronisatie problemen: Geen gedeelde tijdslijn tussen organisaties</li> </ul>"},{"location":"principes/focus-op-verandering/#het-principe-focus-op-verandering","title":"Het principe: focus op verandering","text":"<p>Registers zouden moeten focussen op change (veranderingen) in plaats van alleen op state (toestand). Dit betekent:</p>"},{"location":"principes/focus-op-verandering/#kernprincipes","title":"Kernprincipes","text":"<ol> <li>Veranderingen zijn eerste klas burgers - Events en wijzigingen worden expliciet gemodelleerd</li> <li>Zorgvuldig omgaan met veranderingen - Elke wijziging wordt gevalideerd en gedocumenteerd  </li> <li>Precisie in acceptatie - Nieuwe wijzigingen worden zorgvuldig gecontroleerd voordat ze worden geaccepteerd</li> <li>Bewaren van intentie - Niet alleen wat er verandert, maar ook waarom</li> </ol>"},{"location":"principes/focus-op-verandering/#praktische-implementatie","title":"Praktische implementatie","text":"<pre><code>Traditionele aanpak:\nUPDATE personen SET naam = 'Jansen' WHERE id = 456\n\nFocus op verandering aanpak:\nCOMMAND: RegistreerHuwelijk(manId: 123, vrouwId: 456, datum: 2024-01-15, gekozenAchternaam: 'Jansen')\nEVENT: HuwelijkGeregistreerdMetNaamkeuze(manId: 123, vrouwId: 456, datum: 2024-01-15, gekozenAchternaam: 'Jansen')\n</code></pre>"},{"location":"principes/focus-op-verandering/#voorbeelden","title":"Voorbeelden","text":""},{"location":"principes/focus-op-verandering/#voorbeeld-1-traditioneel-vs-verandering-gericht","title":"Voorbeeld 1: Traditioneel vs. Verandering-gericht","text":"<p>Traditioneel BAG register:</p> <pre><code>Adres ID: 12345\nStraat: Hoofdstraat 1\nWoonplaats: Amsterdam\nStatus: Bestaand\n</code></pre> <p>Verandering-gericht BAG register:</p> <pre><code>Events voor Adres 12345:\n- AdresGeregistreerd(straat: \"Hoofdstraat 1\", woonplaats: \"Amsterdam\", datum: 2020-01-01)\n- StatusGewijzigd(van: \"In aanbouw\", naar: \"Bestaand\", datum: 2020-06-01, reden: \"Oplevering\")\n</code></pre>"},{"location":"principes/focus-op-verandering/#voorbeeld-2-huwelijk-in-personen-register","title":"Voorbeeld 2: huwelijk in personen register","text":"<p>Probleem scenario: Jan Jansen en Marie de Wit trouwen. Marie neemt de naam Jansen aan. Later blijkt de huwelijksdatum verkeerd geregistreerd.</p> <p>Traditionele aanpak: 1. UPDATE naam \u2192 'de Wit' wordt 'Jansen', geen geschiedenis 2. Correctie \u2192 UPDATE huwelijksdatum, oorspronkelijke fout verdwenen</p> <p>Verandering-gerichte aanpak: 1. <code>RegistreerHuwelijk(manId: 123, vrouwId: 456, datum: 2024-01-15, gekozenAchternaam: 'Jansen')</code>  2. Event: <code>HuwelijkGeregistreerdMetNaamkeuze</code> \u2192 complete business realiteit in \u00e9\u00e9n event 3. <code>CorrigeerHuwelijksdatum(manId: 123, vrouwId: 456, oorspronkelijkeDatum: 2024-01-15, nieuweDate: 2024-01-20)</code>  4. Event: <code>HuwelijksdatumGecorrigeerd</code> \u2192 fout blijft zichtbaar, correctie traceerbaar 5. Huidige view toont: Marie Jansen, huwelijk 20 jan 2024, inclusief correctiehistorie</p>"},{"location":"principes/focus-op-verandering/#voorbeeld-3-personen-register","title":"Voorbeeld 3: personen register","text":"<p>Traditioneel personen register:</p> <ul> <li>Persoon object</li> </ul> <p>Verandering-gericht personen register:</p> <ul> <li>Geboren</li> <li>Verhuisd</li> <li>Getrouwd</li> <li>Gescheiden</li> <li>Overleden</li> </ul> <p>Let op: Dit voorbeeld illustreert ook context is altijd aanwezig - dat is geen toeval. Goede principes versterken elkaar en leiden tot dezelfde ontwerpkeuzes.</p>"},{"location":"principes/focus-op-verandering/#mindset-shift","title":"Mindset shift","text":"<p>Focus op verandering vereist een fundamentele shift: van state denken naar event denken. Hier is de typische denkevolutie:</p>"},{"location":"principes/focus-op-verandering/#stap-0-state-denken-traditioneel","title":"Stap 0: state denken (traditioneel)","text":"<pre><code>// Denken: \"Ik update de huidige toestand\"\nUPDATE personen SET achternaam = 'Jansen' WHERE id = 456\nUPDATE huwelijken SET datum = '2024-01-15' WHERE man_id = 123 AND vrouw_id = 456\n</code></pre> <p>Probleem:  - Geen geschiedenis - oude waarden zijn weg - Geen context - waarom werd dit gewijzigd? - Geen atomiciteit - wat als \u00e9\u00e9n UPDATE faalt? - Geen causale relatie - huwelijk en naamswijziging lijken onafhankelijk</p>"},{"location":"principes/focus-op-verandering/#stap-1-object-denken-met-events","title":"Stap 1: object denken met events","text":"<pre><code>// Denken: \"Ik heb een huwelijk object en dan wijzig ik een naam\"\nEVENT: HuwelijkGeregistreerd(manId: 123, vrouwId: 456, datum: 2024-01-15)\nEVENT: AchternaamGewijzigd(persoonId: 456, nieuweAchternaam: 'Jansen', oorzaak: 'Huwelijk')\n</code></pre> <p>Probleem: Twee aparte events voor \u00e9\u00e9n business actie. Wat als \u00e9\u00e9n event faalt?</p> <p>Verbetering: Events bewaren geschiedenis, maar nog steeds object-geori\u00ebnteerd denken.</p>"},{"location":"principes/focus-op-verandering/#stap-2-object-denken-met-referenties","title":"Stap 2: object denken met referenties","text":"<pre><code>// Denken: \"Ik verwijs naar het huwelijk object\"\nEVENT: HuwelijkGeregistreerd(manId: 123, vrouwId: 456, datum: 2024-01-15)\nEVENT: AchternaamGewijzigdDoorHuwelijk(persoonId: 456, nieuweAchternaam: 'Jansen', huwelijkId: 789)\n</code></pre> <p>Probleem: Nog steeds afhankelijkheid tussen events. Event heeft referentie naar ander event nodig.</p> <p>Verbetering: Expliciete relaties, maar nog steeds geen atomiciteit.</p>"},{"location":"principes/focus-op-verandering/#stap-3-event-denken","title":"Stap 3: event denken","text":"<pre><code>// Denken: \"Wat gebeurde er werkelijk? Het complete verhaal in \u00e9\u00e9n event\"\nEVENT: HuwelijkGeregistreerdMetNaamkeuze(manId: 123, vrouwId: 456, datum: 2024-01-15, gekozenAchternaam: 'Jansen')\n</code></pre> <p>Doorbraak: E\u00e9n event beschrijft de complete business realiteit. Self-contained en atomisch.</p>"},{"location":"principes/focus-op-verandering/#waarom-stap-3-de-beste-oplossing-is","title":"Waarom stap 3 de beste oplossing is","text":"<ul> <li>Atomiciteit: Alles gebeurt samen of helemaal niet</li> <li>Self-contained: Event vertelt het hele verhaal</li> <li>Geen afhankelijkheden: Event handlers zijn eenvoudiger</li> <li>Business getrouw: Modelleert werkelijkheid (naamkeuze hoort bij huwelijk)</li> </ul>"},{"location":"principes/focus-op-verandering/#voordelen","title":"Voordelen","text":"<ul> <li>Volledige traceability: Elke wijziging is terug te vinden</li> <li>Betere compliance: Audit trail is ingebouwd</li> <li>Flexibelere correcties: Fouten kunnen worden rechtgezet zonder dataverlies  </li> <li>Rijkere informatie: Context en intentie worden bewaard</li> <li>Betere synchronisatie: Andere systemen kunnen reageren op wijzigingen</li> </ul>"},{"location":"principes/focus-op-verandering/#relatie-met-protocol-denken","title":"Relatie met protocol-denken","text":"<p>Focus op verandering is het hart van protocol-denken. Zonder gebeurtenissen kunnen organisaties niet effectief samenwerken omdat:</p>"},{"location":"principes/focus-op-verandering/#protocollen-zijn-fundamenteel-event-driven","title":"Protocollen zijn fundamenteel event-driven","text":"<p>Moderne inter-organisatie protocollen zijn niet gebaseerd op \"data delen\" maar op \"gebeurtenissen delen\": - Tijdsvolgorde cruciaal: Wie deed wat wanneer bepaalt de uitkomst van protocollen - Causaliteit behoud: Oorzaak-gevolg relaties tussen organisaties blijven bewaard - Asynchrone samenwerking: Organisaties kunnen reageren op hun eigen tempo zonder real-time synchronisatie</p>"},{"location":"principes/focus-op-verandering/#state-based-protocollen-falen-bij-schaal","title":"State-based protocollen falen bij schaal","text":"<p>Traditionele \"snapshot sharing\" protocollen breken bij meerdere organisaties: - Race conditions: Verschillende organisaties wijzigen dezelfde data tegelijk - Inconsistente views: Elk systeem heeft andere \"huidige toestand\" - Geen conflict resolution: Hoe bepaal je welke wijziging leidend is?</p>"},{"location":"principes/focus-op-verandering/#events-maken-dikke-protocollen-mogelijk","title":"Events maken dikke protocollen mogelijk","text":"<p>Protocol-denken gaat naar protocollen die business regels afdwingen: - Event validation: Protocollen kunnen gebeurtenissen valideren voordat ze geaccepteerd worden - Governance via events: Alle besluiten en wijzigingen zijn traceerbaar - Distributed consensus: Gebeurtenissen cre\u00ebren overeenstemming tussen organisaties</p>"},{"location":"principes/focus-op-verandering/#relatie-met-andere-principes","title":"Relatie met andere principes","text":"<ul> <li>Versterkt: Context is altijd aanwezig - veranderingen behouden context</li> <li>Ondersteunt: Meerdere views standaard - wijzigingen kunnen naar verschillende views worden geprojecteerd</li> <li>Vereist: Digitaal als fundament - gebeurtenissen kunnen alleen digitaal goed vastgelegd worden</li> </ul>"},{"location":"principes/focus-op-verandering/#waarom-dit-principe-altijd-geldt","title":"Waarom dit principe altijd geldt","text":"<p>Verandering is de enige constante in overheidsregisters. State denken maskeert deze werkelijkheid:</p>"},{"location":"principes/focus-op-verandering/#elk-register-verandert-continu","title":"Elk register verandert continu","text":"<p>Registers zijn nooit statisch: - BRP: Mensen verhuizen, trouwen, overlijden, krijgen kinderen - BAG: Adressen ontstaan, wijzigen, verdwijnen, worden hernummerd - Handelsregister: Bedrijven starten, fuseren, wijzigen activiteiten, stoppen - Kadaster: Eigendom wisselt, percelen worden gesplitst, grenzen wijzigen</p>"},{"location":"principes/focus-op-verandering/#elke-wijziging-heeft-context","title":"Elke wijziging heeft context","text":"<p>Iedere verandering gebeurt om een reden: - Wie heeft de wijziging aangevraagd of vastgesteld? - Waarom is deze wijziging doorgevoerd? - Wanneer is deze wijziging van kracht geworden? - Op basis waarvan is deze beslissing genomen?</p>"},{"location":"principes/focus-op-verandering/#verantwoording-is-wettelijke-verplichting","title":"Verantwoording is wettelijke verplichting","text":"<p>Overheidsregisters moeten kunnen verantwoorden: - Rechtmatigheid: Was deze wijziging toegestaan? - Doelmatigheid: Was deze wijziging noodzakelijk? - Controleerbaarheid: Kan deze wijziging worden getoetst? - Herstelbaarheid: Kan een fout worden rechtgezet?</p>"},{"location":"principes/focus-op-verandering/#nuance-vastgestelde-gegevens-in-protocollen","title":"Nuance: vastgestelde gegevens in protocollen","text":"<p>Sommige gegevens zijn \"immutable by nature\" maar ook bij deze speelt verandering een rol in protocollen:</p> <p>Immutable content, dynamic protocol context: - Luchtfoto's: Inhoud wijzigt niet, maar publicatie, validatie, en gebruik via protocollen wel - Meetresultaten: Waarde is vast, maar certificering, kwaliteit, en geaccepteerdheid evolueren - Juridische documenten: Tekst is vast, maar status (concept\u2192definitief\u2192ingetrokken) wijzigt via protocollen</p> <p>In protocollen is ook voor \"immutable\" gegevens de gebeurtenis van vastleggen cruciaal: - \"Foto gemaakt\": Wanneer, door wie, met welke apparatuur, voor welk doel? - \"Meting uitgevoerd\": Door welk lab, volgens welke methode, met welke nauwkeurigheid? - \"Document ondertekend\": Door wie, wanneer, onder welke omstandigheden?</p> <p>Protocol-perspectief: Ook immutable content heeft een lifecycle die via gebeurtenissen wordt gestuurd.</p>"},{"location":"principes/focus-op-verandering/#implementatie-overwegingen","title":"Implementatie overwegingen","text":""},{"location":"principes/focus-op-verandering/#voor-protocol-denken-specifiek","title":"Voor protocol-denken specifiek","text":"<ul> <li>Event schemas: Gebeurtenissen tussen organisaties vereisen gestandaardiseerde formats</li> <li>Temporal ordering: Tijdsstempels moeten synchroon zijn tussen organisaties (bijv. NTP)</li> <li>Event versioning: Protocollen moeten kunnen evolueren door expliciete versionering en regels voor het oplossen van verschillen</li> <li>Conflict resolution: Heldere regels voor wanneer gebeurtenissen conflicteren</li> </ul>"},{"location":"principes/focus-op-verandering/#technische-uitdagingen","title":"Technische uitdagingen","text":"<ul> <li>Storage overhead: Events nemen meer ruimte in, maar bieden veel meer mogelijkheden</li> <li>Query complexiteit: Meerdere views worden gegenereerd uit event streams</li> <li>Performance: Event sourcing vereist goede tooling en caching strategie\u00ebn</li> <li>Cross-boundary events: Gebeurtenissen die organisatiegrenzen overschrijden vereisen extra validatie</li> </ul>"},{"location":"principes/focus-op-verandering/#organisatorische-aspecten","title":"Organisatorische aspecten","text":"<ul> <li>Event governance: Wie mag welke gebeurtenissen publiceren?</li> <li>Schema evolution: Hoe evolueren event formats zonder systemen te breken?</li> <li>Migratie: Bestaande state-based systemen incrementeel naar event-sourcing</li> <li>Training: Teams moeten leren denken in gebeurtenissen ipv toestanden</li> </ul> <p>Dit principe vormt de basis voor verantwoorde overheidsregistratie en robuuste inter-organisatie protocollen waarin organisaties effectief kunnen samenwerken.</p> <ol> <li> <p>NOTE Oorspronkelijk ontstaan uit en overgenomen vanuit project Uit betrouwbare bron en aangepast naar protocol-denken\u00a0\u21a9</p> </li> </ol>"},{"location":"principes/meerdere-views-standaard/","title":"Principe: meerdere views standaard<sup>1</sup>","text":"<p>Nooit \u00e9\u00e9n model of API - altijd meerdere perspectieven</p>"},{"location":"principes/meerdere-views-standaard/#het-probleem","title":"Het probleem","text":"<p>Huidige registers hebben meestal slechts \u00e9\u00e9n view, \u00e9\u00e9n set gegevens, slechts \u00e9\u00e9n model. Dit lijkt effici\u00ebnt, maar is eigenlijk nooit voldoende:</p> <ul> <li>Verschillende gebruikers, verschillende behoeften: Een gemeente heeft andere informatie nodig dan een notaris</li> <li>Verschillende contexten, verschillende structuren: Wat handig is voor invoer, is niet handig voor elk gebruik. Sterker nog, elk gebruik kent verschillende behoeften en benodigde structuren</li> <li>Evolutie wordt belemmerd: Nieuwe behoeften vereisen wijzigingen aan het ene model, met risico's voor bestaande gebruikers</li> <li>Optimalisatie onmogelijk: E\u00e9n model kan niet tegelijk geoptimaliseerd zijn voor invoer \u00e9n voor complexe analyses</li> <li>Protocol rigiditeit: Inter-organisatie protocollen kunnen niet flexibel reageren op verschillende organisatie-behoeften</li> <li>Integratiechaos: Elke organisatie maakt zijn eigen \"view\" door data te transformeren, vaak met fouten</li> </ul>"},{"location":"principes/meerdere-views-standaard/#het-principe-meerdere-views-standaard","title":"Het principe: meerdere views standaard","text":"<p>Registers moeten vanaf het begin ontworpen worden met meerdere views als uitgangspunt, niet als uitzondering.</p>"},{"location":"principes/meerdere-views-standaard/#kernprincipes","title":"Kernprincipes","text":"<ol> <li>Views zijn projecties - Elke view toont dezelfde werkelijkheid vanuit een specifiek perspectief</li> <li>Context bepaalt structuur - Elke gebruikscontext verdient zijn eigen geoptimaliseerde datastructuur  </li> <li>Evolutie door toevoegen - Nieuwe behoeften betekenen nieuwe views, niet wijzigingen aan bestaande views</li> <li>Synchronisatie by design - Views worden consistent gehouden door expliciete updatestrategie\u00ebn</li> </ol>"},{"location":"principes/meerdere-views-standaard/#praktische-implementatie","title":"Praktische implementatie","text":"<pre><code>Traditionele aanpak - \u00e9\u00e9n model:\nAPI: /personen/{id}\nResponse: { naam, adres, geboortedatum, burgerlijkeStaat, ... }\n\nMeerdere views aanpak:\nAPI: /personen/{id}/contact -&gt; { naam, adres, telefoon, email }  \nAPI: /personen/{id}/juridisch -&gt; { naam, burgerlijkeStaat, gezinssamenstelling }\nAPI: /personen/{id}/identificatie -&gt; { naam, geboortedatum, bsn }\nAPI: /personen/{id}/specialistisch -&gt; complete informatie voor experts\n</code></pre>"},{"location":"principes/meerdere-views-standaard/#voorbeelden","title":"Voorbeelden","text":""},{"location":"principes/meerdere-views-standaard/#voorbeeld-1-bag-register-verschillende-perspectieven-op-een-adres","title":"Voorbeeld 1: BAG register - verschillende perspectieven op \u00e9\u00e9n adres","text":"<p>Traditioneel BAG - \u00e9\u00e9n model:</p> <pre><code>Adres {\n  id: \"1234AB567\",\n  straat: \"Hoofdstraat\",\n  huisnummer: 42,\n  postcode: \"1234AB\", \n  woonplaats: \"Amsterdam\",\n  oppervlakte: 85,\n  bouwjaar: 1995,\n  energielabel: \"B\",\n  monument: false,\n  eigenaarId: \"789\",\n  huurders: [...],\n  wozWaarde: 350000,\n  vastgoedtax: 2100\n}\n</code></pre> <p>Meerdere views BAG:</p> <pre><code>// Voor postbode (eenvoudig, snel)\nAdresContactView {\n  straat: \"Hoofdstraat\",\n  huisnummer: 42,\n  postcode: \"1234AB\",\n  woonplaats: \"Amsterdam\"\n}\n\n// Voor gemeente (administratief)\nAdresAdministratiefView {\n  id: \"1234AB567\",\n  straat: \"Hoofdstraat\", \n  huisnummer: 42,\n  status: \"Bestaand\",\n  datumIngebruikname: \"1995-03-15\",\n  laatsteWijziging: \"2024-01-10\"\n}\n\n// Voor energieadviseur (technisch)\nAdresTechnischView {\n  id: \"1234AB567\", \n  oppervlakte: 85,\n  bouwjaar: 1995,\n  energielabel: \"B\",\n  isolatiegegevens: {...}\n}\n\n// Voor belastingdienst (financieel)\nAdresFinancieelView {\n  id: \"1234AB567\",\n  wozWaarde: 350000,\n  vastgoedtax: 2100,\n  eigendomshistorie: [...]\n}\n</code></pre>"},{"location":"principes/meerdere-views-standaard/#voorbeeld-2-brp-register-verschillende-perspectieven-op-een-persoon","title":"Voorbeeld 2: BRP register - verschillende perspectieven op \u00e9\u00e9n persoon","text":"<p>Traditioneel BRP - alles in \u00e9\u00e9n:</p> <pre><code>Persoon {\n  bsn: \"123456789\",\n  naam: \"Jan Jansen\", \n  adres: \"Hoofdstraat 42\",\n  telefoon: \"06-12345678\",\n  geboortedatum: \"1985-05-15\",\n  geboorteplaats: \"Utrecht\", \n  nationaliteit: \"Nederlandse\",\n  burgerlijkeStaat: \"Gehuwd\",\n  partner: \"Marie Jansen\",\n  kinderen: [\"Anna Jansen\", \"Piet Jansen\"],\n  inkomen: 45000,\n  zorgverzekering: \"VGZ\",\n  rijbewijs: \"B\",\n  paspoort: \"NL123456\",\n  medischeDossier: {...}\n}\n</code></pre> <p>Meerdere views BRP:</p> <pre><code>// Voor gemeente (basis contact)  \nPersoonContactView {\n  naam: \"Jan Jansen\",\n  adres: \"Hoofdstraat 42, 1234AB Amsterdam\", \n  telefoonnummer: \"06-12345678\"\n}\n\n// Voor juridische procedures\nPersoonJuridischView {\n  bsn: \"123456789\",\n  volledigeNaam: \"Johannes Petrus Jansen\",\n  geboortedatum: \"1985-05-15\",\n  geboorteplaats: \"Utrecht\",\n  nationaliteit: \"Nederlandse\", \n  burgerlijkeStaat: \"Gehuwd sinds 2010-06-15\",\n  partner: \"Maria Elisabeth Jansen-de Wit\"\n}\n\n// Voor onderwijs (privacy-vriendelijk)\nPersoonOnderwijsView {\n  voornaam: \"Jan\",\n  achternaam: \"Jansen\", \n  geboortejaar: 1985,\n  woonplaats: \"Amsterdam\"\n}\n\n// Voor zorgverlening (medisch relevant)\nPersoonZorgView {\n  naam: \"Jan Jansen\",\n  geboortedatum: \"1985-05-15\", \n  adres: \"Hoofdstraat 42\",\n  contactpersoon: \"Marie Jansen (partner)\",\n  zorgverzekering: \"VGZ\",\n  // geen BSN voor privacy\n}\n</code></pre>"},{"location":"principes/meerdere-views-standaard/#voorbeeld-3-evolutie-zonder-breaking-changes","title":"Voorbeeld 3: evolutie zonder breaking changes","text":"<p>Situatie: Gemeente krijgt nieuwe taak - energietransitie ondersteuning. Ze hebben nu adresgegevens nodig gecombineerd met eigendomsinformatie.</p> <p>Traditionele aanpak: </p> <pre><code>// Uitbreiding van bestaand model - BREAKING CHANGE\nAdres {\n  id, straat, huisnummer, ..., // bestaande velden\n  eigenaar: {...},              // NIEUW - kan null zijn  \n  energieadvies: {...}          // NIEUW - complex object\n}\n</code></pre> <p>Probleem: Alle bestaande gebruikers krijgen extra data die ze niet willen.</p> <p>Meerdere views aanpak:</p> <pre><code>// Nieuwe view toevoegen - NO BREAKING CHANGE\nAdresEnergietransitieView {\n  id: \"1234AB567\",\n  straat: \"Hoofdstraat\",\n  huisnummer: 42,\n  energielabel: \"B\", \n  eigenaar: \"Jan Jansen\",\n  potentieelZonnepanelen: 8.5,\n  isolatiestatus: \"Matig\",\n  advies: \"Dak isoleren, zonnepanelen overwegen\"\n}\n</code></pre> <p>Voordeel: Gemeente krijgt precies wat ze nodig heeft, bestaande gebruikers merken niets.</p>"},{"location":"principes/meerdere-views-standaard/#mindset-shift","title":"Mindset shift","text":"<p>Meerdere views vereist een fundamentele shift: van \"\u00e9\u00e9n waarheid\" naar \"meerdere perspectieven op \u00e9\u00e9n waarheid\".</p>"},{"location":"principes/meerdere-views-standaard/#stap-0-een-model-denken-traditioneel","title":"Stap 0: \u00e9\u00e9n model denken (traditioneel)","text":"<pre><code>// Denken: \"Ik maak \u00e9\u00e9n perfect model voor iedereen\"\nclass Persoon {\n    naam, adres, telefoon, email, geboortedatum, \n    burgerlijkeStaat, inkomen, medischeDossier, ...\n}\n</code></pre> <p>Probleem: - Veel gebruikers krijgen irrelevante informatie - Privacy concerns - iedereen ziet alles - Performance issues - altijd alle data ophalen - Inflexibel - wijzigingen raken alle gebruikers</p>"},{"location":"principes/meerdere-views-standaard/#stap-1-filtering-denken","title":"Stap 1: filtering denken","text":"<pre><code>// Denken: \"Ik filter het ene model per gebruik\"\nAPI: /personen/{id}?fields=naam,adres\nAPI: /personen/{id}?view=contact\n</code></pre> <p>Probleem: Onderliggende model blijft complex en fragiel.</p> <p>Verbetering: Meer controle over wat wordt getoond, maar geen structurele oplossing.</p>"},{"location":"principes/meerdere-views-standaard/#stap-2-multiple-views-denken","title":"Stap 2: multiple views denken","text":"<pre><code>// Denken: \"Ik maak aparte views per gebruikscontext\"\nclass ContactView { naam, adres, telefoon }\nclass JuridischView { naam, burgerlijkeStaat, gezinssamenstelling }\nclass VolledigView { alle informatie }\n</code></pre> <p>Probleem: Nog steeds geen expliciete synchronisatie tussen views.</p> <p>Verbetering: Context-specifieke structuren, maar synchronisatie is ad-hoc.</p>"},{"location":"principes/meerdere-views-standaard/#stap-3-views-als-projecties-denken","title":"Stap 3: views als projecties denken","text":"<pre><code>// Denken: \"Views zijn bewuste projecties van events naar specifieke doelen\"\nContactView = projectie(PersonenEvents, optimizedFor: \"dagelijks contact\")\nJuridischView = projectie(PersonenEvents, optimizedFor: \"juridische procedures\") \nAnalyseView = projectie(PersonenEvents, optimizedFor: \"statistische analyse\")\n</code></pre> <p>Doorbraak: Expliciete relatie tussen bron (events) en views, met heldere doelen.</p>"},{"location":"principes/meerdere-views-standaard/#voordelen","title":"Voordelen","text":"<ul> <li>Data-minimalisatie by design: Elke view bevat alleen relevante gegevens, privacy en GDPR compliance ingebouwd</li> <li>Betere beveiliging: Toegang kan per view worden geregeld</li> <li>Betere performance: Elke view bevat precies wat nodig is</li> <li>Flexibelere evolutie: Nieuwe behoeften vereisen geen breaking changes</li> <li>Duidelijkere verantwoordelijkheden: Elke view heeft een specifiek doel</li> <li>Eenvoudigere integratie: Andere systemen kunnen de meest passende view kiezen</li> </ul>"},{"location":"principes/meerdere-views-standaard/#relatie-met-protocol-denken","title":"Relatie met protocol-denken","text":"<p>Meerdere views is essentieel voor protocol-denken omdat moderne protocollen fundamenteel gaan over het aanbieden van verschillende perspectieven op dezelfde data:</p>"},{"location":"principes/meerdere-views-standaard/#protocollen-zijn-view-coordinators","title":"Protocollen zijn view-coordinators","text":"<p>Dikke protocollen co\u00f6rdineren niet alleen data-uitwisseling, maar ook welke views gebruikt worden: - Protocol-native views: Specificaties defini\u00ebren welke views beschikbaar zijn voor elk protocol - Organisatie-specifieke views: Elke organisatie kan zijn eigen optimale view defini\u00ebren binnen protocol-afspraken - Evolutionary protocols: Nieuwe organisaties kunnen deelnemen door nieuwe views toe te voegen zonder bestaande te breken</p>"},{"location":"principes/meerdere-views-standaard/#views-maken-schaalbare-netwerken-mogelijk","title":"Views maken schaalbare netwerken mogelijk","text":"<p>Netwerken van datastromen werken alleen met meerdere views: - Hub-and-spoke breaking: E\u00e9n centraal model schaalt niet naar vele organisaties met verschillende behoeften - Federated views: Elke organisatie biedt zijn eigen views aan, gecoordineerd via protocollen - View discovery: Protocollen maken het mogelijk om te ontdekken welke views beschikbaar zijn</p>"},{"location":"principes/meerdere-views-standaard/#views-ondersteunen-dikke-protocollen","title":"Views ondersteunen dikke protocollen","text":"<p>Meerdere views maken dikke protocollen praktisch mogelijk: - Business rule distribution: Verschillende views kunnen verschillende validatieregels hebben - Context preservation: Views behouden de juiste context voor elke organisatie - Governance distribution: Verschillende organisaties kunnen verschillende compliance-views hebben</p>"},{"location":"principes/meerdere-views-standaard/#relatie-met-andere-principes","title":"Relatie met andere principes","text":"<ul> <li>Versterkt Focus op verandering - events kunnen naar verschillende views worden geprojecteerd</li> <li>Ondersteunt Context is altijd aanwezig - elke view heeft een specifieke context en doel</li> <li>Basis voor contextovergang-ontwerp - bewuste mapping tussen verschillende contexten</li> </ul>"},{"location":"principes/meerdere-views-standaard/#waarom-dit-principe-altijd-geldt","title":"Waarom dit principe altijd geldt","text":""},{"location":"principes/meerdere-views-standaard/#meerdere-gebruikers-meerdere-behoeften","title":"Meerdere gebruikers = meerdere behoeften","text":"<p>Elk register heeft altijd verschillende stakeholders: - Interne gebruikers: Verschillende afdelingen, verschillende behoeften - Externe afnemers: Verschillende organisaties, verschillende use cases - Burgers: Verschillende informatiebehoefte dan professionals - Applicaties: API's hebben andere structuren nodig dan gebruikersinterfaces</p>"},{"location":"principes/meerdere-views-standaard/#evolutie-is-onvermijdelijk","title":"Evolutie is onvermijdelijk","text":"<p>Systemen veranderen altijd: - Nieuwe wetgeving: Vereist nieuwe informatie-elementen - Technische ontwikkelingen: Maken nieuwe use cases mogelijk - Organisatieveranderingen: Leiden tot andere informatiebehoeften - Gebruikersfeedback: Vraagt om andere structuren</p>"},{"location":"principes/meerdere-views-standaard/#performance-en-privacy-vereisen-specialisatie","title":"Performance en privacy vereisen specialisatie","text":"<p>E\u00e9n model kan nooit optimaal zijn voor alles: - Privacy: Verschillende autorisatieniveaus vereisen verschillende views - Performance: Verschillende use cases hebben andere snelheidseisen - Cachingstrategie: Views kunnen individueel geoptimaliseerd worden - Netwerk gebruik: Alleen relevante data versturen</p>"},{"location":"principes/meerdere-views-standaard/#implementatie-overwegingen","title":"Implementatie overwegingen","text":""},{"location":"principes/meerdere-views-standaard/#synchronisatie-strategieen","title":"Synchronisatie strategie\u00ebn:","text":"<ul> <li>Event-driven updates: Views worden bijgewerkt door events</li> <li>Eventual consistency: Views kunnen tijdelijk inconsistent zijn met de bron (events) - in gedistribueerde cloud infrastructuren is eventual consistency inherent een gegeven, niet een keuze</li> <li>Transactionele updates: Alleen mogelijk binnen \u00e9\u00e9n database/service boundary - over service grenzen heen is eventual consistency onvermijdelijk  </li> </ul>"},{"location":"principes/meerdere-views-standaard/#performance-overwegingen","title":"Performance overwegingen:","text":"<ul> <li>Geoptimaliseerde storage: Elke view kan zijn eigen optimale datastructuur hebben</li> <li>Caching strategies: Views kunnen individueel gecached worden</li> <li>Index optimization: Elke view krijgt de juiste indexes voor zijn use case</li> </ul>"},{"location":"principes/meerdere-views-standaard/#beheer-complexiteit","title":"Beheer complexiteit:","text":"<ul> <li>View lifecycle: Duidelijke procedures voor toevoegen, wijzigen, verwijderen van views</li> <li>Documentation: Elke view heeft heldere documentatie over doel en gebruik</li> <li>Monitoring: Synchronisatie tussen views moet gecontroleerd worden - in gedistribueerde systemen wordt monitoring inherent exponentieel complexer met eigen health checks, latency metrics, en consistency monitoring per view</li> <li>Protocol compliance: Views moeten voldoen aan protocol-specificaties over organisatie-grenzen heen</li> <li>View versioning: Evolutie van views zonder protocol-deelnemers te breken</li> </ul> <p>Dit principe zorgt ervoor dat registers flexibel kunnen evolueren zonder bestaande gebruikers te verstoren, door verschillende perspectieven op dezelfde werkelijkheid aan te bieden.</p> <ol> <li> <p>NOTE Oorspronkelijk ontstaan uit en overgenomen vanuit project Uit betrouwbare bron en aangepast naar protocol-denken\u00a0\u21a9</p> </li> </ol>"},{"location":"principes/open-samenwerking/","title":"Principe: open samenwerking","text":"<p>Protocollen ontstaan en evolueren alleen in open samenwerking tussen alle deelnemers</p>"},{"location":"principes/open-samenwerking/#het-probleem","title":"Het probleem","text":"<p>Traditionele overheidsystemen worden vaak in isolatie ontwikkeld, wat tot verschillende problemen leidt:</p> <ul> <li>Silo-ontwikkeling: Organisaties ontwikkelen eigen oplossingen zonder afstemming</li> <li>Vendor lock-in: Commerci\u00eble leveranciers bepalen protocol-specificaties in gesloten systemen</li> <li>Incompatibiliteit: Systemen kunnen niet met elkaar communiceren door gebrek aan gemeenschappelijke afspraken</li> <li>Geen vertrouwen: Gesloten protocollen maken controle en verificatie onmogelijk</li> <li>Evolutie stagneert: Protocollen kunnen niet evolueren omdat wijzigingen ondoorzichtig zijn</li> <li>Asymmetrische macht: Grote organisaties domineren protocol-ontwikkeling ten koste van kleinere partijen</li> </ul>"},{"location":"principes/open-samenwerking/#het-principe-open-samenwerking","title":"Het principe: open samenwerking","text":"<p>Protocollen voor gegevensuitwisseling moeten ontwikkeld worden in open samenwerking tussen alle betrokken partijen. Dit betekent:</p>"},{"location":"principes/open-samenwerking/#kernprincipes","title":"Kernprincipes","text":"<ol> <li>Transparante ontwikkeling - Alle beslissingen over protocollen zijn inzichtelijk en traceerbaar</li> <li>Inclusieve participatie - Alle belanghebbenden kunnen bijdragen aan protocol-ontwikkeling</li> <li>Open specificaties - Protocol-beschrijvingen zijn publiek toegankelijk en begrijpelijk</li> <li>Gedistribueerde besluitvorming - Geen enkele organisatie domineert protocol-ontwikkeling</li> <li>Evolutionaire governance - Protocollen kunnen evolueren door consensus tussen deelnemers</li> </ol>"},{"location":"principes/open-samenwerking/#praktische-implementatie","title":"Praktische implementatie","text":"<pre><code>Traditionele aanpak:\n1. Organisatie A definieert intern protocol\n2. Organisatie B moet zich aanpassen aan protocol van A\n3. Wijzigingen gaan via organisatie A\n4. Geen inzicht in ontwerpkeuzes\n\nOpen samenwerking aanpak:\n1. Alle organisaties participeren in protocol-definitie\n2. Open specificaties en ontwerpkeuzes gedocumenteerd\n3. Consensusproces voor wijzigingen\n4. Transparante governance en besluitvorming\n</code></pre>"},{"location":"principes/open-samenwerking/#voorbeelden","title":"Voorbeelden","text":""},{"location":"principes/open-samenwerking/#voorbeeld-1-internet-protocollen-als-inspiratie","title":"Voorbeeld 1: Internet protocollen als inspiratie","text":"<p>Hoe het internet werkt: - TCP/IP: Ontwikkeld door ARPANET gemeenschap, niet door \u00e9\u00e9n bedrijf - HTTP: Tim Berners-Lee maakte specificaties publiek beschikbaar - HTML/CSS: W3C co\u00f6rdineert open standaardisatie met alle partijen - DNS: Gedistribueerd systeem zonder centrale controle</p> <p>Resultaat: Wereldwijde interoperabiliteit door open samenwerking</p>"},{"location":"principes/open-samenwerking/#voorbeeld-2-overheids-scenario-brp-uitwisseling","title":"Voorbeeld 2: Overheids-scenario - BRP uitwisseling","text":"<p>Traditioneel (gesloten):</p> <pre><code>1. Ministerie ontwikkelt BRP-interface intern\n2. Gemeenten moeten zich aanpassen aan ministerie-specificaties\n3. Wijzigingen komen van ministerie zonder consultatieproces\n4. Leveranciers bouwen proprietary koppelingen\n</code></pre> <p>Open samenwerking:</p> <pre><code>1. BRP-protocol commissie met vertegenwoordigers van:\n   - Ministerie BZK\n   - Gemeenten (VNG)\n   - Software leveranciers\n   - Privacy toezichthouders\n2. Open specificatie proces met publieke consultatie\n3. Referentie-implementaties beschikbaar\n4. Wijzigingsproces met impact-analyse en stemming\n</code></pre>"},{"location":"principes/open-samenwerking/#mindset-shift","title":"Mindset shift","text":"<p>Open samenwerking vereist een fundamentele shift: van \"wij bepalen\" naar \"samen ontwikkelen\":</p>"},{"location":"principes/open-samenwerking/#stap-0-gesloten-ontwikkeling-traditioneel","title":"Stap 0: gesloten ontwikkeling (traditioneel)","text":"<pre><code>// Denken: \"Wij weten wat goed is, anderen passen zich aan\"\n1. Interne requirements analyse\n2. Interne system design\n3. Implementatie door onze leverancier\n4. Anderen moeten aansluiten op onze API\n</code></pre> <p>Probleem:  - Geen begrip van andermans behoeften - Resistentie bij andere organisaties - Suboptimale oplossingen - Langzame adoptie</p>"},{"location":"principes/open-samenwerking/#stap-1-consultatie-achteraf","title":"Stap 1: consultatie achteraf","text":"<pre><code>// Denken: \"We vragen feedback op ons ontwerp\"\n1. Interne ontwikkeling\n2. Concept ter review voorleggen\n3. Feedback verwerken waar mogelijk\n4. Rollout naar anderen\n</code></pre> <p>Probleem: Fundamentele ontwerpkeuzes al gemaakt, alleen details aanpasbaar.</p> <p>Verbetering: Anderen krijgen stem, maar beperkt.</p>"},{"location":"principes/open-samenwerking/#stap-2-samenwerking-vanaf-begin","title":"Stap 2: samenwerking vanaf begin","text":"<pre><code>// Denken: \"We ontwerpen samen wat voor iedereen werkt\"\n1. Stakeholder analyse van alle betrokkenen\n2. Gezamenlijke requirements en use cases\n3. Co-creatie van specificaties\n4. Gedeelde implementatie en governance\n</code></pre> <p>Probleem: Traag proces, veel afstemming nodig.</p> <p>Verbetering: Echte samenwerking, betere adoptie.</p>"},{"location":"principes/open-samenwerking/#stap-3-open-samenwerking-denken","title":"Stap 3: open samenwerking denken","text":"<pre><code>// Denken: \"We cre\u00ebren een ecosysteem waarin iedereen kan bijdragen\"\n1. Open governance structuur\n2. Transparante besluitvorming\n3. Documentatie en tooling voor nieuwe deelnemers\n4. Evolutie door consensus\n</code></pre> <p>Doorbraak: Zelfevoluerende protocollen met brede adoptie en vertrouwen.</p>"},{"location":"principes/open-samenwerking/#waarom-stap-3-de-beste-oplossing-is","title":"Waarom stap 3 de beste oplossing is","text":"<ul> <li>Netwerkeffecten: Meer deelnemers maken protocol waardevoller</li> <li>Collective intelligence: Betere oplossingen door diverse input</li> <li>Snellere adoptie: Eigenaarschap leidt tot commitment</li> <li>Langetermijn stabiliteit: Geen afhankelijkheid van \u00e9\u00e9n organisatie</li> </ul>"},{"location":"principes/open-samenwerking/#voordelen","title":"Voordelen","text":"<ul> <li>Betere kwaliteit: Diverse perspectieven leiden tot robuustere protocollen</li> <li>Snellere adoptie: Deelnemers implementeren eerder wat ze mee hebben ontworpen</li> <li>Lagere kosten: Gedeelde ontwikkeling en onderhoud</li> <li>Vertrouwen en legitimatie: Transparantie cre\u00ebert vertrouwen, overheidsprotocollen krijgen democratische legitimatie</li> <li>Evolutionaire veerkracht: Protocollen overleven organisatieveranderingen</li> <li>Innovatie acceleratie: Open specificaties stimuleren innovatie</li> </ul>"},{"location":"principes/open-samenwerking/#relatie-met-protocol-denken","title":"Relatie met protocol-denken","text":"<p>Open samenwerking is fundamenteel voor protocol-denken omdat dikke protocollen alleen kunnen ontstaan door intensieve samenwerking:</p>"},{"location":"principes/open-samenwerking/#dikke-protocollen-vereisen-consensus","title":"Dikke protocollen vereisen consensus","text":"<p>Dikke protocollen bevatten business logica en governance regels die alleen succesvol zijn bij breed draagvlak: - Business rule consensus: Organisaties moeten overeenstemming bereiken over validatieregels - Governance alignment: Wie mag wat wijzigen en onder welke voorwaarden - Conflict resolution: Expliciete procedures voor wanneer organisaties het oneens zijn</p>"},{"location":"principes/open-samenwerking/#netwerken-ontstaan-door-open-samenwerking","title":"Netwerken ontstaan door open samenwerking","text":"<p>Netwerken van datastromen kunnen alleen groeien in open ecosystemen: - Organic growth: Nieuwe organisaties kunnen aanhaken zonder permission van bestaande partijen - Federated governance: Geen centrale autoriteit, maar gedistribueerde besluitvorming - Innovation at edges: Nieuwe use cases ontstaan bij deelnemers, niet bij centrale partij</p>"},{"location":"principes/open-samenwerking/#relatie-met-andere-principes","title":"Relatie met andere principes","text":"<ul> <li>Enabler voor: Context is altijd aanwezig - context-mappings ontstaan door samenwerking tussen bounded contexts</li> <li>Enabler voor: Meerdere views standaard - verschillende organisaties defini\u00ebren verschillende views samen</li> <li>Versterkt: Focus op verandering - event schemas vereisen consensus over betekenis van gebeurtenissen</li> <li>Vereist: Digitaal als fundament - open samenwerking gebeurt via digitale platforms</li> </ul>"},{"location":"principes/open-samenwerking/#waarom-dit-principe-altijd-geldt","title":"Waarom dit principe altijd geldt","text":"<p>Open samenwerking is geen \"nice-to-have\" maar een noodzaak voor werkende inter-organisatie protocollen:</p>"},{"location":"principes/open-samenwerking/#complexiteit-vereist-samenwerking","title":"Complexiteit vereist samenwerking","text":"<p>Moderne overheidsprocessen zijn te complex voor \u00e9\u00e9n organisatie: - Domein-overstijgende expertise: Juridisch, technisch, domeinkennis verspreid over organisaties - Impact analyse: Wijzigingen hebben gevolgen die \u00e9\u00e9n organisatie niet kan overzien - Schaalvereisten: Protocollen moeten werken voor duizenden implementaties</p>"},{"location":"principes/open-samenwerking/#vertrouwen-en-legitimatie-zijn-voorwaarden","title":"Vertrouwen en legitimatie zijn voorwaarden","text":"<p>Overheidsorganisaties implementeren alleen protocollen die ze vertrouwen en als legitiem ervaren: - Transparantie: Open processen maken controle en verificatie mogelijk - Verantwoordelijkheid: Duidelijke rollen en besluitvormingslijnen - Voorspelbaarheid: Betrouwbare procedures voor wijzigingen en evolutie</p>"},{"location":"principes/open-samenwerking/#evolutie-vereist-flexibiliteit","title":"Evolutie vereist flexibiliteit","text":"<p>Protocollen moeten kunnen evolueren met veranderende behoeften: - Toekomstbestendigheid: Onbekende toekomstige use cases moeten mogelijk blijven - Geleidelijke veroudering: Oude versies moeten blijven werken - Innovatieruimte: Ruimte voor experimentatie zonder alles te breken</p>"},{"location":"principes/open-samenwerking/#implementatie-overwegingen","title":"Implementatie overwegingen","text":""},{"location":"principes/open-samenwerking/#protocol-specifieke-aspecten","title":"Protocol-specifieke aspecten","text":"<ul> <li>Governance model: Wie neemt welke beslissingen via welk proces (consensus, stemming, delegatie)?</li> <li>Conflictoplossing: Procedures voor meningsverschillen en geschillen</li> <li>Lidmaatschap: Criteria voor toetreding en procedures voor vertrek</li> <li>Evolutie management: Hoe evolueren specificaties zonder breaking changes?</li> </ul>"},{"location":"principes/open-samenwerking/#technische-uitdagingen","title":"Technische uitdagingen","text":"<ul> <li>Specificatie tooling: Tools voor collaboratieve specificatie-ontwikkeling</li> <li>Versie beheer: Hoe beheer je evoluerende specificaties?</li> <li>Test frameworks: Gedeelde test suites voor protocol compliance</li> <li>Referentie implementaties: Wie onderhoudt referentie implementaties?</li> </ul>"},{"location":"principes/open-samenwerking/#organisatorische-aspecten","title":"Organisatorische aspecten","text":"<ul> <li>Resource inzet: Wie betaalt voor open samenwerking activiteiten?</li> <li>Tijdsinvestering: Open processen kosten meer tijd dan unilaterale beslissingen</li> <li>Cultuurverandering: Van concurrentie naar samenwerking mindset</li> <li>Juridische kaders: Contractuele afspraken voor open samenwerking</li> <li>Intellectueel eigendom: Wie bezit de gezamenlijk ontwikkelde specificaties?</li> </ul> <p>Dit principe maakt alle andere principes mogelijk door een fundament van vertrouwen en samenwerking tussen organisaties te cre\u00ebren.</p>"},{"location":"voorbeelden/","title":"Voorbeelden","text":"<p>Hoewel denken in protocollen nog een nieuw concept is, zijn er al wel voorbeelden of proof-of-concepts in deze richting.</p> <ul> <li> <p>SensRNet</p> <p>Een innovatief traject om een nationaal sensoren (metadata) register tot stand te brengen. Een proof-of-concept van een modulair systeem met componenten voor bronhouders, een publicatie (tbv een landelijke voorziening) \u00e9n de data-uitwisseling in het netwerk van nodes. Een holistiche benadering in een toepassing van open samenwerken met een open source project, data-uitwisseling op basis van events en de opzet van een netwerk.</p> </li> <li> <p>Basisregistratie Kadaster</p> <p>Het nieuwe systeem voor de bijhouding van de Kadastrale Registratie is gebaseerd op Event Sourcing. Daarvoor heeft het Kadaster de transitie van een 'single model' doorgemaakt naar 'commands, events &amp; queries'. Hoewel dat succesvol in productie is genomen, liggen hier nog meer kansen in de doorontwikkeling naar gebeurtenisgedreven registers.</p> </li> </ul>"},{"location":"voorbeelden/koers/","title":"Basisregistratie Kadaster","text":"<p>In het bijhouden van de Basisregistratie Kadaster (BRK) maakt het Kadaster gebruik van Event Sourcing. Daarvoor heeft het Kadaster de paradigma verschuiving doorgemaakt van 'single model' naar 'Commands, Events &amp; Queries'.</p>"},{"location":"voorbeelden/koers/#koers","title":"KOERS","text":"<p>Het oorspronkelijke systeem kende een gescheiden systeem voor de notari\u00eble aktes in het Openbaar Register en de BRK (AKR, Automatisering Kadastrale Registratie). Herkenbaar. Gebruikelijk.</p> <p></p> <p>Voor het nieuwe systeem, KOERS, het Kadastraal Objecten en Rechten Systeem, hebben we moeten ontwerpen welke gegevens (data) in de notari\u00eble aktes staan. Deze noemen we 'Rechtsfeiten'. Vervolgens hebben wij ontworpen, de Kadasterwet in de hand, hoe Rechtsfeiten wijzigingen in de Kadastrale Registratie effectueren. Dat  hebben we beschreven in 'Rechtsgevolgen'. Dit zijn de Events uit Event Sourcing. En vervolgens hebben we ook de verwerking in de (primaire) projectie ontworpen.</p> <p></p> <p>Uiteraard hebben we de ontwerpen omgezet in werkende software. Het KOERS systeem (dubbelop voor de oplettende lezer  ) Side note: We hebben daarbij automatisering serieus genomen door de toepassing van continuous delivery. Gestart tijdens de projectfase, doorgezet sinds de livegang oktober '18, tot vandaag de dag nog steeds met continue releases naar de productie omgeving </p> <p></p>"},{"location":"voorbeelden/koers/#kansen","title":"Kansen","text":"<p>Het systeem KOERS biedt veel kansen om door te ontwikkelen richting een gebeurtenisgedreven register. En toch. In de digitale overheid van vandaag wordt vooral gestuurd op 'een centrale API'. E\u00e9n bron. E\u00e9n centrale API. Uitsluitend gebruik van deze centrale API door alles en iedereen.</p> <p></p> <p>Vanuit het denken in protocollen is dit ... een goede ontwikkeling om allerlei ongecontroleerde kopie\u00ebn van de BRK tegen te gaan. MAAR het is ook ontoereikend en zelfs onmogelijk als eindoplossing. En wat is dan een alternatief scenario? Wel ... (nogmaals) denken in protocollen  Om te beginnen is een door de bronhouder, dus Kadaster, gecontroleerde kopie bij een andere partij w\u00e9l mogelijk (opnieuw, op basis van gebeurtenisgedreven registers).</p> <p></p> <p>Hier komen nieuwe mogelijkheden tot onze beschikking! Het is mogelijk om per afnemer te filteren </p> <p></p> <p>De reden van een afnemende / derde partij voor het gebruik van de BRK informatie is nooit om deze te bekijken zoals die is. Er is altijd een doel waarvoor de BRK data gebruikt gaat worden. Stel nou dat we met z'n allen open samenwerken en dat zowel de projectie van de BRK als de toepassing waarvoor de BRK data gebruikt wordt als open source gepubliceerd zijn. Dan wordt het mogelijk om een aangepaste projectie te maken specifiek geschikt voor het doel waarvoor de BRK data gebruikt wordt. En wordt het ook mogelijk voor het Kadaster om met een andere partij mee te kijken naar dat gebruik van de BRK data. Zo ontstaat er een veel beter begrip en validatie dat de BRK data juist wordt gebruikt en dat de toepassing in een ander domein juist is. D\u00e1t is pas een (rechts)zekerheid! </p> <p></p>"},{"location":"voorbeelden/sensrnet/","title":"SensRNet","text":"<p>SensRNet, uitgesproken als 'sensornet', is de samenvoeging van Sensor Registry Network. Het Kadaster is betrokken geweest bij de opzet daarvan. Het idee daarbij is een andere benadering dan de huidige inrichtingen en oplossingen van software paketten bij bronhouders, een Landelijke Voorziening bij het Kadaster en onderhandelingen over de API daartussen.</p> <p>SensRNet is een holistische benadering van het probleem. Er zijn bronhouders die een behoefte hebben en daar software voor nodig hebben. We willen graag een gestandaardiseerde ontsluiting van alle sensoren in Nederland. Dat wil zeggen: de metadata over sensoren. Welke sensor bevindt zich op welke plaats, wat meet die dan en wie zit daar achter? En in plaats van allemaal losse onderdelen los van elkaar te ontwerpen, willen we het hele probleem beschouwen en met een passende oplossing komen.</p> <p></p> <p>De oplossing (solution) is een modulair systeem, opgezet als open source project (zie open samenwerken). In dit project dienen de verschillende onderdelen 'opgelost' te worden. Dat betekent software voor de bronhouder om zelfstandig sensoren (metadata) te kunnen beheren, maar ook software om alle (metadata over) sensoren te kunnen ontsluiten \u00e9n de data-uitwisseling daartussen! Hierbij is gebruik gemaakt van het concept van gebeurtenisgedreven registers. Bronhouders beheren de metadata over hun eigen sensoren en de wijzigingen die daarbij te weeg worden gebracht, worden gedeeld binnen het netwerk. Dit wordt een Registry Node genoemd. Vervolgens worden deze wijzigingen intern verwerkt zodat de gebruiker bijgewerkte metadata op een kaart geprojecteerd ziet \u00e9n deze wijzigingen worden in het netwerk gedeeld met alle andere nodes. De Publishing Node is dan niets meer dan een eenvoudige instantie waarin \u00f3\u00f3k de stand wordt opgebouwd op basis van dezelfde events / wijzigingen.</p> <p></p>"}]}